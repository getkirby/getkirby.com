@charset 'utf-8';

// The `includes.scss` file includes function, mixins and sets
// some defaults. It must be the first one includes in any SCSS
// file that is compiled separately. The includes-files MUST NOT
// generate any output.
@import "includes";

// Base styles are global styles with low specificity, setting
// page layout, typography providing helpers for grid, typogaphy,
// a11y etc.
@import "base/reset";
@import "base/forms";
@import "base/icon";
@import "base/images";
@import "base/layout";
@import "base/page";
@import "base/typography";
@import "base/a11y";

// The $ENV variable is added via Webpack and can be used to print
// custom CSS for debugging. It can either have a value of
// `development` or `prodcuction`.
@if $ENV == development {
  @include mq-debug;
}

// Components are self-contained partials of the site. (S)CSS written
// inside of a component file MUST NEVER affect global CSS styling.
// Remember to use prefixes class names in nested elements to avoid
// component rules from affecting global styles, e.g.
// BAD:   `.toc .title { … }`
// GREAT: `.toc-title { … }`
@import "components/arrow-link";
@import "components/cardgrid";
@import "components/cheatsheet";
@import "components/clients";
@import "components/code";
@import "components/cta";
@import "components/debug";
@import "components/description";
@import "components/docs";
@import "components/footer";
@import "components/forms";
@import "components/header";
@import "components/hero";
@import "components/intro";
@import "components/kosmos-form";
@import "components/kosmos-issues";
@import "components/logo";
@import "components/menu";
@import "components/multicol";
@import "components/pagination";
@import "components/screenshot";
@import "components/search";
@import "components/sidebar";
@import "components/since";
@import "components/text";
@import "components/toc";
@import "components/tooltip";
@import "components/voices";

// Utlity classes are also globally available and should be used to
// avoid code duplication wherever possible. They are meant to apply
// final styling and should be implemented as single-purpose
// classes, to maximize versatility.
@import "utilities/alignments";
@import "utilities/colors";
@import "utilities/backgrounds";
@import "utilities/margins";

// Template-specific styles are rendered into separate files and
// thus do not need to be included here. If you add a new
// template-specific stylesheet, you have to restart the dev server,
// otherwise the dev server will not compile them. You should also
// stop the server before deleting one of them.
// @import "templates/home";
