{"version":3,"sources":["webpack:///./src/scss/templates/src/scss/components/plugin-cards.scss","webpack:///./src/scss/templates/plugins.scss","webpack:///./src/scss/templates/src/scss/templates/plugins.scss","webpack:///./src/scss/templates/src/scss/tools/mq.scss"],"names":[],"mappings":"AAAA,cACE,aACA,0DACA,cACA,mBCOD,aDJC,aACA,sBACA,8BACA,kBACA,mBACA,YCQD,oBDLC,aACA,gBACA,uBCSD,kBDLC,eACA,gBACA,aACA,mBACA,uBACA,gBACA,kBACA,cACA,cACA,eCSD,kBDLC,aACA,qBACA,YCSD,mBDNC,qBCUD,mBDPC,gBACA,gBACA,eACA,WACA,mBACA,iBCWD,oBDRC,iBACA,4EACA,wBACA,qBCYD,yBDTC,kBACA,kBACA,cCaD,oBDVC,aACA,mBACA,aCcD,sBDXC,aACA,mBACA,iBACA,4EACA,oBACA,wBACA,WCeD,0BDZC,mBCgBD,4BDbC,UCiBD,mBDbC,mBCiBD,uCDdG,qBCkBH,4CDfG,mBCmBH,yCDhBG,qBEvFJ,MACE,aACA,mBACA,eACA,8BAGF,gBACE,gBACA,SACA,aACA,oBACA,WACA,qCACA,qBACA,gBC6IE,wBDrJJ,gBAWI,+BDgHD,CC7GH,sBACE,cAKF,gBACE,kBACA,aACA,eACA,kBACA,mBAGF,kBACE,YACA,cACA,kBACA,WAGF,iBACE,QACA,YAGF,kBACE,QACA,YACA,mBC0GE,wBDtGF,iBACE,aAEF,kBACE,aACA,gBAEF,gBACE,wCACA,WACA,OACA,QDiHD,CC7GH,oBACE,mBAEF,oBACE,qBACA,cAEF,mBACE,aACA,mBACA,iBACA,cASF,6CANE,eACA,gBACA,mBAIF,sBACE,gBAIA,aACA,mBACA,uBAPF,4BAUI,UAIJ,8DACE","file":"css/templates/plugins.css","sourcesContent":[".plugin-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));\n  grid-gap: 1rem;\n  grid-auto-rows: 1fr;\n}\n.plugin-card {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  line-height: 1.5em;\n  background: #efefef;\n  height: 100%;\n}\n.plugin-card-header {\n  display: flex;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.plugin-card-icon {\n  width: 1.875rem;\n  height: 1.875rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #000;\n  margin-right: 1rem;\n  color: $color-syntax-yellow;\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.plugin-card-body {\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  flex-grow: 1;\n}\n.plugin-card-image {\n  margin-bottom: .75rem;\n}\n.plugin-card-title {\n  margin-bottom: 0;\n  font-weight: 600;\n  font-size: 1rem;\n  color: #000;\n  white-space: nowrap;\n  line-height: 1rem;\n}\n.plugin-card-author {\n  font-size: .75rem;\n  font-family: $font-mono;\n  color: rgba($color-anthracite, .7);\n  margin-bottom: .75rem;\n}\n.plugin-card-description {\n  font-size: .875rem;\n  line-height: 1.5em;\n  color: $color-anthracite;\n}\n.plugin-card-footer {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n}\n.plugin-card-footer a {\n  display: flex;\n  align-items: center;\n  font-size: .75rem;\n  font-family: $font-mono;\n  margin-right: 1.5rem;\n  color: rgba($color-anthracite, .7);\n  width: 100%;\n}\n.plugin-card-footer a svg {\n  margin-right: .5rem;\n}\n.plugin-card-footer a svg * {\n  fill: #000;\n}\n\n.plugin-card:hover {\n  background: $color-syntax-yellow;\n\n  .plugin-card-author {\n    color: rgba(#000, .7);\n  }\n  .plugin-card-description {\n    color: currentColor;\n  }\n  .plugin-card-footer a {\n    color: rgba(#000, .7);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/components/plugin-cards.scss","/* stylelint-disable block-closing-brace-empty-line-before, at-rule-empty-line-before */\n\n/* stylelint-disable at-rule-empty-line-before */\n\n/* stylelint-disable at-rule-empty-line-before */\n\n.plugin-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));\n  grid-gap: 1rem;\n  grid-auto-rows: 1fr;\n}\n\n.plugin-card {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  line-height: 1.5em;\n  background: #efefef;\n  height: 100%;\n}\n\n.plugin-card-header {\n  display: flex;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.plugin-card-icon {\n  width: 1.875rem;\n  height: 1.875rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #000;\n  margin-right: 1rem;\n  color: #f0c674;\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.plugin-card-body {\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  flex-grow: 1;\n}\n\n.plugin-card-image {\n  margin-bottom: .75rem;\n}\n\n.plugin-card-title {\n  margin-bottom: 0;\n  font-weight: 600;\n  font-size: 1rem;\n  color: #000;\n  white-space: nowrap;\n  line-height: 1rem;\n}\n\n.plugin-card-author {\n  font-size: .75rem;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  color: rgba(60, 67, 80, 0.7);\n  margin-bottom: .75rem;\n}\n\n.plugin-card-description {\n  font-size: .875rem;\n  line-height: 1.5em;\n  color: #3c4350;\n}\n\n.plugin-card-footer {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n}\n\n.plugin-card-footer a {\n  display: flex;\n  align-items: center;\n  font-size: .75rem;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  margin-right: 1.5rem;\n  color: rgba(60, 67, 80, 0.7);\n  width: 100%;\n}\n\n.plugin-card-footer a svg {\n  margin-right: .5rem;\n}\n\n.plugin-card-footer a svg * {\n  fill: #000;\n}\n\n.plugin-card:hover {\n  background: #f0c674;\n}\n\n.plugin-card:hover .plugin-card-author {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.plugin-card:hover .plugin-card-description {\n  color: currentColor;\n}\n\n.plugin-card:hover .plugin-card-footer a {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.hero {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n.plugins-search {\n  background: #000;\n  border: 0;\n  font: inherit;\n  padding: .25rem 1rem;\n  color: #fff;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  margin-bottom: 1.5rem;\n  flex-basis: 100%;\n}\n\n@media (min-width: 56em) {\n  .plugins-search {\n    flex-basis: calc(66.66% - 1rem);\n  }\n}\n\n.plugins-search:focus {\n  color: #f0c674;\n}\n\n.plugins-layout {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -3rem;\n  margin-bottom: 6rem;\n}\n\n.plugins-layout > * {\n  flex-grow: 1;\n  flex-shrink: 0;\n  padding-left: 3rem;\n  width: 100%;\n}\n\n.plugins-sidebar {\n  order: 1;\n  min-width: 0;\n}\n\n.plugins-overview {\n  order: 2;\n  min-width: 0;\n  margin-bottom: 6rem;\n}\n\n@media (min-width: 56em) {\n  .plugins-sidebar {\n    width: 33.33%;\n  }\n\n  .plugins-overview {\n    width: 66.66%;\n    margin-bottom: 0;\n  }\n\n  .plugin-filters {\n    position: sticky;\n    top: 1.5rem;\n    left: 0;\n    right: 0;\n  }\n}\n\n.plugins-sidebar ul {\n  margin-bottom: 3rem;\n}\n\n.plugins-sidebar li {\n  margin-bottom: .25rem;\n  display: block;\n}\n\n.plugins-sidebar a {\n  display: flex;\n  align-items: center;\n  font-size: .75rem;\n  color: #3c4350;\n}\n\n.plugins-sidebar a img {\n  width: 1.875rem;\n  height: 1.875rem;\n  margin-right: .5rem;\n}\n\n.plugin-category-icon {\n  background: #000;\n  margin-right: .5rem;\n  width: 1.875rem;\n  height: 1.875rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.plugin-category-icon svg * {\n  fill: #fff;\n}\n\n.plugins-sidebar li[aria-current] .plugin-category-icon svg * {\n  fill: #f0c674;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/plugins.scss","$ENV: production;\n@import \"../includes\";\n@import \"../components/plugin-cards\";\n\n.hero {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n.plugins-search {\n  background: #000;\n  border: 0;\n  font: inherit;\n  padding: .25rem 1rem;\n  color: #fff;\n  box-shadow: $shadow;\n  margin-bottom: 1.5rem;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-basis: calc(66.66% - 1rem);\n  }\n}\n.plugins-search:focus {\n  color: $color-syntax-yellow;\n}\n\n\n\n.plugins-layout {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -3rem;\n  margin-bottom: 6rem;\n}\n\n.plugins-layout > * {\n  flex-grow: 1;\n  flex-shrink: 0;\n  padding-left: 3rem;\n  width: 100%;\n}\n\n.plugins-sidebar {\n  order: 1;\n  min-width: 0;\n}\n\n.plugins-overview {\n  order: 2;\n  min-width: 0;\n  margin-bottom: 6rem;\n}\n\n@include mq(from m) {\n  .plugins-sidebar {\n    width: 33.33%;\n  }\n  .plugins-overview {\n    width: 66.66%;\n    margin-bottom: 0;\n  }\n  .plugin-filters {\n    position: sticky;\n    top: 1.5rem;\n    left: 0;\n    right: 0;\n  }\n}\n\n.plugins-sidebar ul {\n  margin-bottom: 3rem;\n}\n.plugins-sidebar li {\n  margin-bottom: .25rem;\n  display: block;\n}\n.plugins-sidebar a {\n  display: flex;\n  align-items: center;\n  font-size: .75rem;\n  color: $color-anthracite;\n}\n.plugins-sidebar a img {\n  width: 1.875rem;\n  height: 1.875rem;\n  margin-right: .5rem;\n}\n\n\n.plugin-category-icon {\n  background: #000;\n  margin-right: .5rem;\n  width: 1.875rem;\n  height: 1.875rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg * {\n    fill: #fff;\n  }\n}\n\n.plugins-sidebar li[aria-current] .plugin-category-icon svg * {\n  fill: $color-syntax-yellow;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/templates/plugins.scss","/* stylelint-disable block-closing-brace-empty-line-before, at-rule-empty-line-before */\n\n//  mÂµ\n//\n//  A simple library for handling media queries\n//  and breakpoints across SASS/CSS and JavaScript.\n//\n//  @author Fabian Michael <hallo@fabianmichael.de>\n//  @license MIT\n//\n//  Define your breakpoints here. Must be either in px\n//  or em units. Breakpoints will be converted to em by\n//  the library for best consistency across different\n//  browsers.\n//\n//  Read [PX, EM or REM Media Queries?](https://zellwk.com/blog/media-query-units/)\n//  by Zell Liew for more information on units in media queries.\n$mq-breakpoints: (\n  (xs 480px  4)\n  (sm 768px  8)\n  (md 1024px 12)\n  (lg 1280px 12)\n  (xl 1440px 12)\n) !default;\n\n//  Prints selectors for pseudo-elements, which are utilized\n//  by the JavaScript counterpart of the mÂµ library. Set to\n//  false, if you donât need the JavaScript functionality or\n//  you want to call `@include mq-print-pseudo-rules()`\n//  manually.\n$mq-print-pseudo-rules: true !default;\n\n// Debug settings\n$mq-debug: false !default;\n$mq-debug-z-index: 10000 !default;\n$mq-debug-selector: \"body::after\" !default;\n\n//  Mixin for generating gte media queries\n//\n//  Usage:\n//\n//  @include mq(from md) {\n//    .nav {\n//      position: fixed;\n//    }\n//  }\n//\n//  or:\n//\n//  .nav {\n//    background: blue;\n//\n//    @include mq(from xs to sm) {\n//      background: red;\n//    }\n//  }\n//\n//\n//  Supported queries:\n//\n//  @include mq(md) { â¦ }\n//  @include mq(from md) { â¦ } // same as \"mq(md)\"\n//  @include mq(to md) { â¦ }\n//  @include mq(from xs to md) { â¦ }\n//\n//  With additional custom media queries:\n//\n//  @include mq(xs, '(orientation: landscape)') { â¦ }\n//  @include mq(from xs to md, '(orientation: landscape)') { â¦ }\n@mixin mq($query: false, $and: false) {\n\n  // Initialize variables\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if $query {\n    // $query is not false\n    @if type-of($query) == number {\n      $min-width: $query;\n    } @else if type-of($query) == list {\n\n      @if length($query) == 4 and nth($query, 1) == from and nth($query, 3) == to {\n        // from {breakpoint} to {breakpoint}\n\n        $min-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 2)));\n        $max-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 4)) - 1px);\n\n      } @else if length($query) == 2 {\n        // one keyword + breakpoint\n\n        $keyword: nth($query, 1);\n        $breakpoint: nth($query, 2);\n\n        @if $keyword == from {\n          // from {breakpoint}\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n        }\n\n        @else if $keyword == to {\n          // to {breakpoint}\n          $max-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint) - 1px);\n\n        } @else if $keyword == only {\n          // only {breakpoint}\n\n          $items-length: length($mq-breakpoints);\n          $next-breakpoint: false;\n\n          @for $i from 1 through $items-length {\n            $item:      nth($mq-breakpoints, $i);\n            $item-name: nth($item, 1);\n\n            @if $next-breakpoint == true {\n              // breakpoint was found in last iteration\n              $next-breakpoint: $item-name;\n            } @else if $breakpoint == $item-name {\n              // breakpoint found, will be assigned in next iteration\n              $next-breakpoint: true;\n            }\n          }\n\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n          @if type-of($next-breakpoint) != bool {\n            $max-width: mq-px2em(mq-retrieve-breakpoint-width($next-breakpoint) - 1px);\n          }\n\n        } @else {\n          @error \"Invalid breakpoint query supplied to mq()\";\n        }\n      }\n    } @else {\n      // {breakpoint} => from {breakpoint}\n      $min-width: mq-px2em(mq-retrieve-breakpoint-width($query));\n    }\n  }\n\n  // Build Media Query\n\n  @if $min-width != 0 {\n    $media-query: \"(min-width: #{$min-width})\";\n  }\n\n  @if $max-width != 0 {\n    @if $media-query != \"\" {\n      $media-query: \"#{$media-query} and \";\n    }\n    $media-query: \"#{$media-query} (max-width: #{$max-width})\";\n  }\n\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  $media-query: unquote(#{$media-query});\n\n  @if $media-query != \"\" {\n    // Only print a media query if itâs not empty\n    @media #{$media-query} {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n//  Converts a pixel value to itâs em equivalent, based on\n//  the browserâs assumed default font-size of 16px. As media\n//  queries ignore font-sizes set via CSS, this function does\n//  not an additional \"base font size\" to be set.\n//\n//  @return The em equivalent of given pixel value.\n@function mq-px2em($px) {\n\n  @if type-of($px) != number {\n    @error \"mq-px2em() value must be a number.\";\n    @return 0;\n  }\n\n  @if unitless($px) {\n    @if $px != 0 {\n      @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels for you\";\n    }\n    /* stylelint-disable-next-line length-zero-no-unit */\n    @return mq-px2em($px + 0px); // That may fail.\n  } @else if (unit($px) == em) {\n    @return $px;\n  }\n  @return ($px / 16px) * 1em;\n}\n\n// Retrieves the min-width of a breakpoint in px, assuming\n// a font-size of 16px.\n//\n// @return The min-width of a breakpoint in pixels\n@function mq-retrieve-breakpoint-width($name) {\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @if $name == $breakpoint-name {\n      @if unit($breakpoint-width) == em {\n        // Convert to px value, if breakpoints where defined\n        // in em\n        $breakpoint-width: $breakpoint-width / 16px;\n      }\n      @return $breakpoint-width;\n    }\n  }\n  @return \"Breakpoint #{$name} does not exist\";\n}\n\n// Prints the pseudo-rule(s) needed by the JS counterpart\n// of mÂµ.\n@mixin mq-print-pseudo-rules {\n\n  $breakpoint-names: \"\";\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name: nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n    $add: ' \"#{$breakpoint-name}\": \"(min-width: #{mq-px2em($breakpoint-width)})\" ';\n    @if $breakpoint-names != \"\" {\n      $breakpoint-names: \"#{$breakpoint-names},#{$add}\";\n    } @else {\n      $breakpoint-names: $add;\n    }\n  }\n\n  $breakpoint-names: \"{\" + $breakpoint-names + \"}\";\n\n  html::before {\n    /* Automatically generated by mq to be consumed by its JavaScript counterpart */\n    content: $breakpoint-names;\n    display: none;\n  }\n}\n\n@if $mq-print-pseudo-rules {\n  // Print pseudo-rules, if enabled\n  @include mq-print-pseudo-rules;\n}\n\n@mixin mq-debug {\n  // Print debug rules, if enabled\n  #{unquote($mq-debug-selector)} {\n    background: rgba(black, .75);\n    bottom: 0;\n    color: #fff;\n    display: block;\n    font-family: monospace;\n    font-size: 10px;\n    line-height: 1;\n    padding: 3px 6px;\n    position: fixed;\n    right: 0;\n    z-index: $mq-debug-z-index;\n  }\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @include mq($breakpoint-name) {\n      #{unquote($mq-debug-selector)} {\n        content: \"Breakpoint: #{$breakpoint-name} (>= #{$breakpoint-width}) | Template: \" attr(data-template);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/tools/mq.scss"],"sourceRoot":""}