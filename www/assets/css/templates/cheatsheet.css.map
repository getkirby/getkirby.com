{"version":3,"sources":["webpack:///./src/scss/templates/src/scss/templates/cheatsheet.scss","webpack:///./src/scss/templates/cheatsheet.scss","webpack:///./src/scss/templates/src/scss/tools/mq.scss"],"names":[],"mappings":"AAGA,KACE,gBCKD,UDJC,gBCSD,KDLC,cCKD,uBDEC,oBCID,mBDEC,SACA,aACA,OACA,kBACA,QACA,WACA,WCID,kBDAC,aACA,sBACA,cACA,gBCID,yBDAC,mBACA,6BACA,aACA,cACA,cACA,8BACA,iBEmHE,wBF1HJ,yBAUI,aCMD,CACF,gCDFC,mBACA,gBACA,SACA,eACA,aACA,aACA,kBCMD,oCDFC,mBCMD,6BDFC,YACA,iCACA,gBCMD,iBDFC,gBACA,gBEsFE,wBFxFJ,iBAKI,YACA,cACA,gBCQD,CACF,4BDEC,wBCSD,wCDNG,+BEmEA,wBFvEJ,4BAQI,oBCaD,wCDVG,6BCeH,CC6CC,6BF/CA,uFACE,aCcH,iDDVG,aCcH,iDDRG,aCYH,mDDRG,aCYH,CACF,mBDLC,mBACA,gBACA,WACA,aACA,cACA,kBACA,gBCWD,iBDPC,mBACA,aACA,iBACA,iBCWD,sBDPC,4EACA,kBACA,gBACA,iBACA,cACA,mBEEE,6BFRJ,sBASI,aCaD,CACF,sBDTC,4EACA,kBACA,gBACA,iBACA,cACA,SACA,iBEZE,wBFKJ,sBAUI,YCeD,CACF,yEDVC,mBACA,aC6BD,wBDtBC,yCACA,0CAEA,eACA,YACA,cACA,cACA,kBEpCE,wBF2BJ,wBAYI,YACA,cACA,gBCiBD,CACF,4BDbC,oBCiBD,8BDbC,UCiBD,2CDbC,aCiBD,8BDbC,gBACA,SACA,WACA,aACA,kBACA,cACA,UACA,eACA,WCiBD,oCDdG,cCkBH,mCDbC,gBACA,qCACA,WACA,kBACA,OACA,kBACA,QACA,SCiBD,mCDbC,eACA,mBACA,SACA,gBACA,oBACA,uBACA,mBCiBD,uCDbC,cACA,kBACA,gBACA,gBACA,uBCiBD,sCDbC,cACA,iBACA,WACA,gBACA,uBCiBD,gGDZC,mBCiBD,4GDdG,WCmBH,yCDdC,mBACA,aCkBD,qBDZC,mBACA,4BACA,gBEjIE,wBF8HJ,qBAMI,iBACA,YCoBD,CACF,6BDhBC,iBCoBD,wBDfC,kBACA,gBACA,qBACA,iBCoBD,gDDxBC,4EC6BD,wBDpBC,iBCoBD,0BDhBC,cACA,sBCoBD,wCDhBC,gBCoBD,oBDdC,gBACA,4BACA,gBExKE,wBFqKJ,oBAMI,eACA,YACA,gBCsBD,CACF,+BDlBC,iBCsBD,uBDlBC,uCACA,iBACA,kBCsBD,yBDlBC,mBACA,aACA,UACA,iBCsBD,uBDlBC,mBACA,mBACA,aACA,YACA,uBACA,oBACA,WCsBD,2BDlBC,YACA,WCsBD,6CDlBC,mBACA,SACA,WACA,aACA,iBACA,kBACA,MACA,UACA,aCsBD,gCDlBC,cACA,4EACA,gBCsBD,qCDlBC,gBACA,WACA,mBACA,kBACA,QACA,WCsBD,+BDlBC,WACA,iBCsBD,2BDhBC,gBCsBD,4BDlBC,aACA,qBACA,kBCsBD,iCDlBC,mBACA,kBACA,aCsBD,8BDlBC,kBACA,qBACA,4EACA,iBACA,cACA,qBACA,kBACA,WCsBD,4CDlBC,mBCsBD,4BDlBC,aACA,mBACA,uBACA,0DCsBD,8BDlBC,0BACA,cACA,4EACA,iBACA,YACA,gBACA,gBACA,uBACA,mBCsBD,4BDhBC,cACA,gBACA,gBCsBD,yBDlBC,wBACA,gBACA,iBCsBD,6BDnBG,YACA,mBACA,WCuBH,4BDnBG,iBEzTA,wBF6SJ,yBAgBI,aCwBD,4BDrBG,gBCyBH,wCDtBK,eC0BL","file":"css/templates/cheatsheet.css","sourcesContent":["$ENV: production;\n@import \"../includes\";\n\nhtml {\n  background: #fff;\n  overflow: hidden;\n}\n\nbody {\n  display: block;\n  overflow: hidden;\n}\n\n/** Global stuff **/\n\n.cheatsheet.is-loading {\n  pointer-events: none;\n}\n\n/** Layout **/\n\n.cheatsheet-panels {\n  bottom: 0;\n  display: flex;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 2.5rem;\n  width: 100%;\n}\n\n.cheatsheet-panel {\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.cheatsheet-panel-header {\n  align-items: center;\n  border-bottom: 1px solid #ddd;\n  display: flex;\n  flex-shrink: 0;\n  height: 2.5rem;\n  justify-content: space-between;\n  padding: 0 1.5rem;\n\n  @include mq(from m) {\n    display: none;\n  }\n}\n\n.cheatsheet-panel-header button {\n  align-items: center;\n  background: none;\n  border: 0;\n  cursor: pointer;\n  display: flex;\n  font: inherit;\n  font-size: .875rem;\n}\n\n.cheatsheet-panel-header button svg {\n  margin-right: .5rem;\n}\n\n.cheatsheet-panel-scrollarea {\n  flex-grow: 1;\n  -webkit-overflow-scrolling: touch;\n  overflow-x: auto;\n}\n\n.cheatsheet-main {\n  background: $color-white;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-width: 20rem;\n  }\n}\n\n/**\n * 1. Workaround for a bug in Firefox (tested with v66.0.1),\n *    that `padding-bottom` on an element with\n *    `overflow-y: auto/scroll`.\n */\n\n.cheatsheet-main-scrollarea {\n  padding: 1.5rem 1.5rem 0; /* 1 */\n\n  > *:last-child {\n    margin-bottom: 1.5rem !important; /* 1 */\n  }\n\n  @include mq(from m) {\n    padding: 3rem 3rem 0; /* 1 */\n\n    > *:last-child {\n      margin-bottom: 3rem !important; /* 1 */\n    }\n  }\n}\n\n/** Modes **/\n@include mq(to m) {\n  .cheatsheet-sections,\n  .cheatsheet-entries {\n    display: none;\n  }\n\n  .cheatsheet[data-show=\"menu\"] {\n    .cheatsheet-panel {\n      display: none;\n    }\n\n    .cheatsheet-sections {\n      display: flex;\n    }\n  }\n\n  .cheatsheet[data-show=\"entries\"] {\n    .cheatsheet-panel {\n      display: none;\n    }\n\n    .cheatsheet-entries {\n      display: flex;\n    }\n  }\n}\n\n/** Header **/\n\n.cheatsheet-header {\n  align-items: center;\n  background: #000;\n  color: #fff;\n  display: flex;\n  height: 2.5rem;\n  position: relative;\n  z-index: 1000000;\n}\n\n.cheatsheet-back {\n  align-items: center;\n  display: flex;\n  margin-left: auto;\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-back > span {\n  font-family: $font-mono;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1;\n  padding-left: .5rem;\n\n  @include mq(to m) {\n    display: none;\n  }\n}\n\n.cheatsheet-header h1 {\n  font-family: $font-mono;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1;\n  margin: 0;\n  padding: 0 1.5rem;\n\n  @include mq(from m) {\n    width: 11rem;\n  }\n}\n\n.cheatsheet-header-left,\n.cheatsheet-header-right {\n  align-items: center;\n  display: flex;\n}\n\n/** Search Form **/\n\n.cheatsheet-header form {\n  align-items: center;\n  border-left: 1px solid rgba(#fff, .3);\n  border-right: 1px solid rgba(#fff, .3);\n  display: flex;\n  flex-basis: 20%;\n  flex-grow: 1;\n  height: 2.5rem;\n  margin-left: 0;\n  position: relative;\n\n  @include mq(from m) {\n    flex-grow: 0;\n    flex-shrink: 0;\n    min-width: 16rem;\n  }\n}\n\n.cheatsheet-header form svg {\n  margin-left: 1.25rem;\n}\n\n.cheatsheet-header form svg * {\n  fill: $color-white;\n}\n\n.cheatsheet-header form:focus-within svg * {\n  fill: $color-syntax-yellow;\n}\n\n.cheatsheet-header form input {\n  background: none;\n  border: 0;\n  color: $color-white;\n  font: inherit;\n  font-size: .875rem;\n  height: 2.5rem;\n  outline: 0;\n  padding: 0 1rem;\n  width: 100%;\n\n  &:focus {\n    color: $color-syntax-yellow;\n  }\n}\n\n.cheatsheet-header .awesomplete ul {\n  background: #000;\n  box-shadow: rgba(#000, .2) 0 2px 20px;\n  color: #fff;\n  font-size: .875rem;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 100%;\n}\n\n.cheatsheet-header .awesomplete li {\n  cursor: pointer;\n  line-height: 1.25em;\n  margin: 0;\n  overflow: hidden;\n  padding: .75rem 1rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.cheatsheet-header .awesomplete strong {\n  display: block;\n  font-size: .875rem;\n  font-weight: 400;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cheatsheet-header .awesomplete small {\n  display: block;\n  font-size: .75rem;\n  opacity: .5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cheatsheet-header .awesomplete li[aria-selected=\"true\"],\n.cheatsheet-header .awesomplete li:hover {\n  background: lighten($color-dark-gray, 5%);\n\n  & small {\n    color: #fff;\n  }\n}\n\n.cheatsheet-header .menu-search-view-all {\n  align-items: center;\n  display: flex;\n}\n\n/** Sections Navigation **/\n\n.cheatsheet-sections {\n  background: $color-background;\n  border-right: 1px solid #ddd;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-basis: 11rem;\n    flex-grow: 0;\n  }\n}\n\n.cheatsheet-sections section {\n  padding: .75rem 0;\n}\n\n.cheatsheet-sections h2 {\n  font-family: $font-mono;\n  font-size: .875rem;\n  line-height: 1.5;\n  margin-bottom: .25rem;\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-sections li {\n  font-family: $font-mono;\n  font-size: .75rem;\n}\n\n.cheatsheet-sections li a {\n  display: block;\n  padding: .25rem 1.5rem;\n}\n\n.cheatsheet-sections li a[aria-current] {\n  background: #ddd;\n}\n\n/** Entries Navigation **/\n\n.cheatsheet-entries {\n  background: $color-white;\n  border-right: 1px solid #ddd;\n  flex-basis: 100%;\n\n  @include mq(from m) {\n    flex-basis: 20%;\n    flex-grow: 0;\n    min-width: 16rem;\n  }\n}\n\n.cheatsheet-entries-scrollarea {\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-entries li {\n  border-bottom: 1px solid rgba(#000, .1);\n  font-size: .75rem;\n  position: relative;\n}\n\n.cheatsheet-entries li a {\n  align-items: center;\n  display: flex;\n  outline: 0;\n  padding: .75rem 0;\n}\n\n.cheatsheet-entry-icon {\n  align-items: center;\n  background: $color-background;\n  display: flex;\n  height: 2rem;\n  justify-content: center;\n  margin-right: .75rem;\n  width: 2rem;\n}\n\n.cheatsheet-entry-icon svg {\n  height: 1rem;\n  width: 1rem;\n}\n\n.cheatsheet-entries li a[aria-current]::after {\n  background: $color-syntax-yellow;\n  bottom: 0;\n  content: \"\";\n  left: -1.5rem;\n  margin-left: -1px;\n  position: absolute;\n  top: 0;\n  width: 6px;\n  z-index: 1000;\n}\n\n.cheatsheet-entries li a strong {\n  display: block;\n  font-family: $font-mono;\n  font-weight: 500;\n}\n\n.cheatsheet-entries li a strong span {\n  background: #fff;\n  color: #999;\n  padding-left: .5rem;\n  position: absolute;\n  right: 0;\n  top: .75rem;\n}\n\n.cheatsheet-entries li a small {\n  color: #777;\n  font-size: .75rem;\n}\n\n/** Section overview **/\n\n.cheatsheet-section .intro {\n  max-width: 45rem;\n}\n\n.cheatsheet-section-toolbar {\n  display: flex;\n  margin-bottom: 1.5rem;\n  margin-top: 1.5rem;\n}\n\n.cheatsheet-section-toolbar > span {\n  background: $color-background;\n  border-radius: 3px;\n  display: flex;\n}\n\n.cheatsheet-section-toolbar a {\n  border-radius: 3px;\n  display: inline-block;\n  font-family: $font-mono;\n  font-size: .75rem;\n  line-height: 1;\n  padding: .5rem 1.5rem;\n  text-align: center;\n  width: 7rem;\n}\n\n.cheatsheet-section-toolbar a[aria-current] {\n  background: $color-syntax-yellow;\n}\n\n.cheatsheet-section-entries {\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-column-gap: 1.5rem;\n  grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\n}\n\n.cheatsheet-section-entries a {\n  border-top: 1px solid #ddd;\n  display: block;\n  font-family: $font-mono;\n  font-size: .75rem;\n  height: 100%;\n  overflow: hidden;\n  padding: .5rem 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/** Article **/\n\n.cheatsheet-article-content {\n  margin: 0 auto;\n  max-width: 60rem;\n  overflow: hidden;\n}\n\n.cheatsheet-article-meta {\n  color: rgba($color-anthracite, .8);\n  font-size: .9rem;\n  margin-top: .5rem;\n\n  svg {\n    height: 13px;\n    margin-right: .2rem;\n    width: 13px;\n  }\n\n  > li {\n    padding: .25rem 0;\n  }\n\n  @include mq(from m) {\n    display: flex;\n\n    > li {\n      padding: 0 .5rem;\n\n      &:first-child {\n        padding-left: 0;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/templates/cheatsheet.scss","/* stylelint-disable block-closing-brace-empty-line-before, at-rule-empty-line-before */\n\n/* stylelint-disable at-rule-empty-line-before */\n\n/* stylelint-disable at-rule-empty-line-before */\n\nhtml {\n  background: #fff;\n  overflow: hidden;\n}\n\nbody {\n  display: block;\n  overflow: hidden;\n}\n\n/** Global stuff **/\n\n.cheatsheet.is-loading {\n  pointer-events: none;\n}\n\n/** Layout **/\n\n.cheatsheet-panels {\n  bottom: 0;\n  display: flex;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 2.5rem;\n  width: 100%;\n}\n\n.cheatsheet-panel {\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.cheatsheet-panel-header {\n  align-items: center;\n  border-bottom: 1px solid #ddd;\n  display: flex;\n  flex-shrink: 0;\n  height: 2.5rem;\n  justify-content: space-between;\n  padding: 0 1.5rem;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-panel-header {\n    display: none;\n  }\n}\n\n.cheatsheet-panel-header button {\n  align-items: center;\n  background: none;\n  border: 0;\n  cursor: pointer;\n  display: flex;\n  font: inherit;\n  font-size: .875rem;\n}\n\n.cheatsheet-panel-header button svg {\n  margin-right: .5rem;\n}\n\n.cheatsheet-panel-scrollarea {\n  flex-grow: 1;\n  -webkit-overflow-scrolling: touch;\n  overflow-x: auto;\n}\n\n.cheatsheet-main {\n  background: #fff;\n  flex-basis: 100%;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-main {\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-width: 20rem;\n  }\n}\n\n/**\n * 1. Workaround for a bug in Firefox (tested with v66.0.1),\n *    that `padding-bottom` on an element with\n *    `overflow-y: auto/scroll`.\n */\n\n.cheatsheet-main-scrollarea {\n  padding: 1.5rem 1.5rem 0;\n  /* 1 */\n}\n\n.cheatsheet-main-scrollarea > *:last-child {\n  margin-bottom: 1.5rem !important;\n  /* 1 */\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-main-scrollarea {\n    padding: 3rem 3rem 0;\n    /* 1 */\n  }\n\n  .cheatsheet-main-scrollarea > *:last-child {\n    margin-bottom: 3rem !important;\n    /* 1 */\n  }\n}\n\n/** Modes **/\n\n@media (max-width: 55.9375em) {\n  .cheatsheet-sections,\n  .cheatsheet-entries {\n    display: none;\n  }\n\n  .cheatsheet[data-show=\"menu\"] .cheatsheet-panel {\n    display: none;\n  }\n\n  .cheatsheet[data-show=\"menu\"] .cheatsheet-sections {\n    display: flex;\n  }\n\n  .cheatsheet[data-show=\"entries\"] .cheatsheet-panel {\n    display: none;\n  }\n\n  .cheatsheet[data-show=\"entries\"] .cheatsheet-entries {\n    display: flex;\n  }\n}\n\n/** Header **/\n\n.cheatsheet-header {\n  align-items: center;\n  background: #000;\n  color: #fff;\n  display: flex;\n  height: 2.5rem;\n  position: relative;\n  z-index: 1000000;\n}\n\n.cheatsheet-back {\n  align-items: center;\n  display: flex;\n  margin-left: auto;\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-back > span {\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1;\n  padding-left: .5rem;\n}\n\n@media (max-width: 55.9375em) {\n  .cheatsheet-back > span {\n    display: none;\n  }\n}\n\n.cheatsheet-header h1 {\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1;\n  margin: 0;\n  padding: 0 1.5rem;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-header h1 {\n    width: 11rem;\n  }\n}\n\n.cheatsheet-header-left,\n.cheatsheet-header-right {\n  align-items: center;\n  display: flex;\n}\n\n/** Search Form **/\n\n.cheatsheet-header form {\n  align-items: center;\n  border-left: 1px solid rgba(255, 255, 255, 0.3);\n  border-right: 1px solid rgba(255, 255, 255, 0.3);\n  display: flex;\n  flex-basis: 20%;\n  flex-grow: 1;\n  height: 2.5rem;\n  margin-left: 0;\n  position: relative;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-header form {\n    flex-grow: 0;\n    flex-shrink: 0;\n    min-width: 16rem;\n  }\n}\n\n.cheatsheet-header form svg {\n  margin-left: 1.25rem;\n}\n\n.cheatsheet-header form svg * {\n  fill: #fff;\n}\n\n.cheatsheet-header form:focus-within svg * {\n  fill: #f0c674;\n}\n\n.cheatsheet-header form input {\n  background: none;\n  border: 0;\n  color: #fff;\n  font: inherit;\n  font-size: .875rem;\n  height: 2.5rem;\n  outline: 0;\n  padding: 0 1rem;\n  width: 100%;\n}\n\n.cheatsheet-header form input:focus {\n  color: #f0c674;\n}\n\n.cheatsheet-header .awesomplete ul {\n  background: #000;\n  box-shadow: rgba(0, 0, 0, 0.2) 0 2px 20px;\n  color: #fff;\n  font-size: .875rem;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 100%;\n}\n\n.cheatsheet-header .awesomplete li {\n  cursor: pointer;\n  line-height: 1.25em;\n  margin: 0;\n  overflow: hidden;\n  padding: .75rem 1rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.cheatsheet-header .awesomplete strong {\n  display: block;\n  font-size: .875rem;\n  font-weight: 400;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cheatsheet-header .awesomplete small {\n  display: block;\n  font-size: .75rem;\n  opacity: .5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cheatsheet-header .awesomplete li[aria-selected=\"true\"],\n.cheatsheet-header .awesomplete li:hover {\n  background: #2f3137;\n}\n\n.cheatsheet-header .awesomplete li[aria-selected=\"true\"] small,\n.cheatsheet-header .awesomplete li:hover small {\n  color: #fff;\n}\n\n.cheatsheet-header .menu-search-view-all {\n  align-items: center;\n  display: flex;\n}\n\n/** Sections Navigation **/\n\n.cheatsheet-sections {\n  background: #efefef;\n  border-right: 1px solid #ddd;\n  flex-basis: 100%;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-sections {\n    flex-basis: 11rem;\n    flex-grow: 0;\n  }\n}\n\n.cheatsheet-sections section {\n  padding: .75rem 0;\n}\n\n.cheatsheet-sections h2 {\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: .875rem;\n  line-height: 1.5;\n  margin-bottom: .25rem;\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-sections li {\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: .75rem;\n}\n\n.cheatsheet-sections li a {\n  display: block;\n  padding: .25rem 1.5rem;\n}\n\n.cheatsheet-sections li a[aria-current] {\n  background: #ddd;\n}\n\n/** Entries Navigation **/\n\n.cheatsheet-entries {\n  background: #fff;\n  border-right: 1px solid #ddd;\n  flex-basis: 100%;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-entries {\n    flex-basis: 20%;\n    flex-grow: 0;\n    min-width: 16rem;\n  }\n}\n\n.cheatsheet-entries-scrollarea {\n  padding: 0 1.5rem;\n}\n\n.cheatsheet-entries li {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: .75rem;\n  position: relative;\n}\n\n.cheatsheet-entries li a {\n  align-items: center;\n  display: flex;\n  outline: 0;\n  padding: .75rem 0;\n}\n\n.cheatsheet-entry-icon {\n  align-items: center;\n  background: #efefef;\n  display: flex;\n  height: 2rem;\n  justify-content: center;\n  margin-right: .75rem;\n  width: 2rem;\n}\n\n.cheatsheet-entry-icon svg {\n  height: 1rem;\n  width: 1rem;\n}\n\n.cheatsheet-entries li a[aria-current]::after {\n  background: #f0c674;\n  bottom: 0;\n  content: \"\";\n  left: -1.5rem;\n  margin-left: -1px;\n  position: absolute;\n  top: 0;\n  width: 6px;\n  z-index: 1000;\n}\n\n.cheatsheet-entries li a strong {\n  display: block;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-weight: 500;\n}\n\n.cheatsheet-entries li a strong span {\n  background: #fff;\n  color: #999;\n  padding-left: .5rem;\n  position: absolute;\n  right: 0;\n  top: .75rem;\n}\n\n.cheatsheet-entries li a small {\n  color: #777;\n  font-size: .75rem;\n}\n\n/** Section overview **/\n\n.cheatsheet-section .intro {\n  max-width: 45rem;\n}\n\n.cheatsheet-section-toolbar {\n  display: flex;\n  margin-bottom: 1.5rem;\n  margin-top: 1.5rem;\n}\n\n.cheatsheet-section-toolbar > span {\n  background: #efefef;\n  border-radius: 3px;\n  display: flex;\n}\n\n.cheatsheet-section-toolbar a {\n  border-radius: 3px;\n  display: inline-block;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: .75rem;\n  line-height: 1;\n  padding: .5rem 1.5rem;\n  text-align: center;\n  width: 7rem;\n}\n\n.cheatsheet-section-toolbar a[aria-current] {\n  background: #f0c674;\n}\n\n.cheatsheet-section-entries {\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-column-gap: 1.5rem;\n  grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\n}\n\n.cheatsheet-section-entries a {\n  border-top: 1px solid #ddd;\n  display: block;\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  font-size: .75rem;\n  height: 100%;\n  overflow: hidden;\n  padding: .5rem 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/** Article **/\n\n.cheatsheet-article-content {\n  margin: 0 auto;\n  max-width: 60rem;\n  overflow: hidden;\n}\n\n.cheatsheet-article-meta {\n  color: rgba(60, 67, 80, 0.8);\n  font-size: .9rem;\n  margin-top: .5rem;\n}\n\n.cheatsheet-article-meta svg {\n  height: 13px;\n  margin-right: .2rem;\n  width: 13px;\n}\n\n.cheatsheet-article-meta > li {\n  padding: .25rem 0;\n}\n\n@media (min-width: 56em) {\n  .cheatsheet-article-meta {\n    display: flex;\n  }\n\n  .cheatsheet-article-meta > li {\n    padding: 0 .5rem;\n  }\n\n  .cheatsheet-article-meta > li:first-child {\n    padding-left: 0;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/cheatsheet.scss","/* stylelint-disable block-closing-brace-empty-line-before, at-rule-empty-line-before */\n\n//  mÂµ\n//\n//  A simple library for handling media queries\n//  and breakpoints across SASS/CSS and JavaScript.\n//\n//  @author Fabian Michael <hallo@fabianmichael.de>\n//  @license MIT\n//\n//  Define your breakpoints here. Must be either in px\n//  or em units. Breakpoints will be converted to em by\n//  the library for best consistency across different\n//  browsers.\n//\n//  Read [PX, EM or REM Media Queries?](https://zellwk.com/blog/media-query-units/)\n//  by Zell Liew for more information on units in media queries.\n$mq-breakpoints: (\n  (xs 480px  4)\n  (sm 768px  8)\n  (md 1024px 12)\n  (lg 1280px 12)\n  (xl 1440px 12)\n) !default;\n\n//  Prints selectors for pseudo-elements, which are utilized\n//  by the JavaScript counterpart of the mÂµ library. Set to\n//  false, if you donât need the JavaScript functionality or\n//  you want to call `@include mq-print-pseudo-rules()`\n//  manually.\n$mq-print-pseudo-rules: true !default;\n\n// Debug settings\n$mq-debug: false !default;\n$mq-debug-z-index: 10000 !default;\n$mq-debug-selector: \"body::after\" !default;\n\n//  Mixin for generating gte media queries\n//\n//  Usage:\n//\n//  @include mq(from md) {\n//    .nav {\n//      position: fixed;\n//    }\n//  }\n//\n//  or:\n//\n//  .nav {\n//    background: blue;\n//\n//    @include mq(from xs to sm) {\n//      background: red;\n//    }\n//  }\n//\n//\n//  Supported queries:\n//\n//  @include mq(md) { â¦ }\n//  @include mq(from md) { â¦ } // same as \"mq(md)\"\n//  @include mq(to md) { â¦ }\n//  @include mq(from xs to md) { â¦ }\n//\n//  With additional custom media queries:\n//\n//  @include mq(xs, '(orientation: landscape)') { â¦ }\n//  @include mq(from xs to md, '(orientation: landscape)') { â¦ }\n@mixin mq($query: false, $and: false) {\n\n  // Initialize variables\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if $query {\n    // $query is not false\n    @if type-of($query) == number {\n      $min-width: $query;\n    } @else if type-of($query) == list {\n\n      @if length($query) == 4 and nth($query, 1) == from and nth($query, 3) == to {\n        // from {breakpoint} to {breakpoint}\n\n        $min-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 2)));\n        $max-width: mq-px2em(mq-retrieve-breakpoint-width(nth($query, 4)) - 1px);\n\n      } @else if length($query) == 2 {\n        // one keyword + breakpoint\n\n        $keyword: nth($query, 1);\n        $breakpoint: nth($query, 2);\n\n        @if $keyword == from {\n          // from {breakpoint}\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n        }\n\n        @else if $keyword == to {\n          // to {breakpoint}\n          $max-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint) - 1px);\n\n        } @else if $keyword == only {\n          // only {breakpoint}\n\n          $items-length: length($mq-breakpoints);\n          $next-breakpoint: false;\n\n          @for $i from 1 through $items-length {\n            $item:      nth($mq-breakpoints, $i);\n            $item-name: nth($item, 1);\n\n            @if $next-breakpoint == true {\n              // breakpoint was found in last iteration\n              $next-breakpoint: $item-name;\n            } @else if $breakpoint == $item-name {\n              // breakpoint found, will be assigned in next iteration\n              $next-breakpoint: true;\n            }\n          }\n\n          $min-width: mq-px2em(mq-retrieve-breakpoint-width($breakpoint));\n\n          @if type-of($next-breakpoint) != bool {\n            $max-width: mq-px2em(mq-retrieve-breakpoint-width($next-breakpoint) - 1px);\n          }\n\n        } @else {\n          @error \"Invalid breakpoint query supplied to mq()\";\n        }\n      }\n    } @else {\n      // {breakpoint} => from {breakpoint}\n      $min-width: mq-px2em(mq-retrieve-breakpoint-width($query));\n    }\n  }\n\n  // Build Media Query\n\n  @if $min-width != 0 {\n    $media-query: \"(min-width: #{$min-width})\";\n  }\n\n  @if $max-width != 0 {\n    @if $media-query != \"\" {\n      $media-query: \"#{$media-query} and \";\n    }\n    $media-query: \"#{$media-query} (max-width: #{$max-width})\";\n  }\n\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  $media-query: unquote(#{$media-query});\n\n  @if $media-query != \"\" {\n    // Only print a media query if itâs not empty\n    @media #{$media-query} {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n//  Converts a pixel value to itâs em equivalent, based on\n//  the browserâs assumed default font-size of 16px. As media\n//  queries ignore font-sizes set via CSS, this function does\n//  not an additional \"base font size\" to be set.\n//\n//  @return The em equivalent of given pixel value.\n@function mq-px2em($px) {\n\n  @if type-of($px) != number {\n    @error \"mq-px2em() value must be a number.\";\n    @return 0;\n  }\n\n  @if unitless($px) {\n    @if $px != 0 {\n      @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels for you\";\n    }\n    /* stylelint-disable-next-line length-zero-no-unit */\n    @return mq-px2em($px + 0px); // That may fail.\n  } @else if (unit($px) == em) {\n    @return $px;\n  }\n  @return ($px / 16px) * 1em;\n}\n\n// Retrieves the min-width of a breakpoint in px, assuming\n// a font-size of 16px.\n//\n// @return The min-width of a breakpoint in pixels\n@function mq-retrieve-breakpoint-width($name) {\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @if $name == $breakpoint-name {\n      @if unit($breakpoint-width) == em {\n        // Convert to px value, if breakpoints where defined\n        // in em\n        $breakpoint-width: $breakpoint-width / 16px;\n      }\n      @return $breakpoint-width;\n    }\n  }\n  @return \"Breakpoint #{$name} does not exist\";\n}\n\n// Prints the pseudo-rule(s) needed by the JS counterpart\n// of mÂµ.\n@mixin mq-print-pseudo-rules {\n\n  $breakpoint-names: \"\";\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name: nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n    $add: ' \"#{$breakpoint-name}\": \"(min-width: #{mq-px2em($breakpoint-width)})\" ';\n    @if $breakpoint-names != \"\" {\n      $breakpoint-names: \"#{$breakpoint-names},#{$add}\";\n    } @else {\n      $breakpoint-names: $add;\n    }\n  }\n\n  $breakpoint-names: \"{\" + $breakpoint-names + \"}\";\n\n  html::before {\n    /* Automatically generated by mq to be consumed by its JavaScript counterpart */\n    content: $breakpoint-names;\n    display: none;\n  }\n}\n\n@if $mq-print-pseudo-rules {\n  // Print pseudo-rules, if enabled\n  @include mq-print-pseudo-rules;\n}\n\n@mixin mq-debug {\n  // Print debug rules, if enabled\n  #{unquote($mq-debug-selector)} {\n    background: rgba(black, .75);\n    bottom: 0;\n    color: #fff;\n    display: block;\n    font-family: monospace;\n    font-size: 10px;\n    line-height: 1;\n    padding: 3px 6px;\n    position: fixed;\n    right: 0;\n    z-index: $mq-debug-z-index;\n  }\n\n  @each $breakpoint in $mq-breakpoints {\n    $breakpoint-name:  nth($breakpoint, 1);\n    $breakpoint-width: nth($breakpoint, 2);\n\n    @include mq($breakpoint-name) {\n      #{unquote($mq-debug-selector)} {\n        content: \"Breakpoint: #{$breakpoint-name} (>= #{$breakpoint-width}) | Template: \" attr(data-template);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scss/templates/src/scss/tools/mq.scss"],"sourceRoot":""}