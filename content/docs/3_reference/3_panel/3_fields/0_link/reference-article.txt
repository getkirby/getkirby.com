Title: Link

----

Since: 4.0.0

----

Guide: blueprints/fields

----

Intro: Use the link field  to create links to external URLs, internal pages, files, email addresses and telephone numbers. The link field is also used in the link dialogs of the writer and textarea fields.

----

Text:

(image: link.png)

## Field properties

(field-options: link)

## Example

```yaml
fields:
  link:
    type: link
```

## Available link types:

- `url`
- `page`
- `file`
- `email`
- `tel`
- `anchor`
- `custom`

## Link to pages

(image: page-link.png)

If an icon has been defined in the page's blueprint, it will be used in the page selector.


## Link to files

(image: file-link.png)


## Limit link types

```yaml
fields:
  link:
    type: link
    options:
      - page
      - anchor
```

## Use in templates/snippets

Use the `toUrl()` method to convert any type of link to a valid URL:

```php
<a href="<?= $page->link()->toUrl() ?>"><?= $page->link() ?></a>
```

## Adding target, link text etc.

Adding a target, link text, class names etc. are not supported by the link field. However, there is a much more flexible and extensible way of adding such data to your links: Wrapping the link field within an object field.

```yaml
fields:
  linkObject:
    type: object
    fields:
      link:
        type: link
      linkText:
         type: text
      target:
        type: toggle
        text: Open in new window?
      classnames:
         type: text
```

Then create a snippet that you can re-use across your site for all such wrapped link fields. Here is a basic example for you to extend according to your requirements:

```php
<?php $linkObject = $page->linkObject()->toObject(); ?>
<a
    href="<?= $linkObject->link()->toUrl() ?>"
    <?= $linkObject->target()->toBool() === true ? 'target="_blank"' : '' ?>
    <?= $linkObject->classnames()->isNotEmpty() ? 'class="' . $linkObject->classnames() . '"' : '' ?>
>
  <?= $linkObject->linkText()->or($linkObject->link()) ?>
</a>
```
