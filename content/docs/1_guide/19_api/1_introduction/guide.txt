Title: Introduction

----

Intro: Kirby's REST API is used by the (glossary: Panel) to connect between the (glossary: Vue) frontend and the PHP backend. It offers full access to your site, pages, files, users and more. You can use it for your SPA or mobile applications built on top of Kirby.

----

Text:

## Endpoints
There are a large number of endpoints, split into the following areas:

(reference: api)

## Authentication

Every API request requires authentication. We offer session-based authentication or HTTP Basic auth. (link: docs/guide/api/authentication text: Read more ›)

## Language
In a (link: docs/guide/languages/introduction text: multi-language site) it is necessary to specify the language for which you want to use the API. This is done by sending an `X-Language` header containing the desired language code with your request.

## Errors

### Example error

```js
{
    "status": "error",
    "message": "The page \"example\" cannot be found",
    "code": 404
}
```

### In debug mode

When debug mode is activated in your config, you will get a more detailed error response with the exception type, file and line.

```js
{
    "status": "error",
    "exception": "Exception",
    "message": "The page \"example\" cannot be found",
    "file": "config/api/data.php",
    "line": 46,
    "code": 500
}
```

To activate the debug mode, add the following to your config:

```php "/site/config/config.php"
return [
  'debug' => true
];
```

<warning>
Please make sure to disable `debug` mode in production! Displaying PHP errors on a public server can be a serious security risk:

- Error messages are displayed with detailed information about the code structure (e.g. file path, class, method)
- With Whoops enabled, there will be even more detailed information about the code structure
- Detailed error messages for login failures could leak information to attackers

In a production environment, always log errors to your PHP error logs.
</warning>


## Custom API location

Kirby can be configured to host the API at a different location. This can be set up in your config.

```php "/site/config/config.php"
return [
  'api' => [
    'slug' => 'rest'
  ]
];
```

All API endpoints are now available at `https://yourdomain.com/rest`. The Panel will automatically switch to the new API location.

## Further customize the API

Find out how you can define custom endpoints, data functions, models etc. either via your (link: docs/reference/system/options/api text: config options ›) or (link: docs/reference/plugins/extensions/api text: in a plugin ›).
