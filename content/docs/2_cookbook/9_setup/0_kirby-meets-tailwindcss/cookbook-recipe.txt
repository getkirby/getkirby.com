Title: Kirby meets Tailwind CSS

----

Text:

This is a walktrouh on how to install and use Tailwind CSS with Kirby.


## Preparation
Before we start, we need to install Node.js for the build process on your client machine (or on the machine where you want to use Tailwind CSS). The latest version, which also includes npm (Node package management) can be downloaded on the (link: https://nodejs.org/en/download/ text: official Node.js website). You can test the successful installation by opening a terminal window and typing the following two commands.

```bash
node --version
```
```bash
npm --version
```

We use a plain kirby installation to get started and just add a new folder `build` to the root directory.



```filesystem
.htaccess
build/
composer.json
content/
index.php
kirby/
media/
README.md
site/
```

## Configuration
Now let's create the file `package.json` which controls our build process inside the newly created directory. This file contains two build scripts, one for development and one for live mode.

```js "/build/package.json"
{
    "name": "My project",
	"scripts": {
        // Use WATCH to observe changes and generate a css file on change
		"watch": "npx tailwindcss -i ./tailwind.css -o ./site.css --jit --purge '../site/**/*.php' -w",

        // Use BUILD to generate a final minified css file
        "build": "npx tailwindcss -i ./tailwind.css -o ./site.css --jit --purge '../site/**/*.php' -m"
	}
}
```
### Explanation
- `-i ./tailwind.css`: input file with Tailwind`s css classes
- `-o ./site.css`: output file which will be generated
- `--jit`: Tailwinds just in time engine *(still preview, but highly recommend!)*
- `--purge '../site/**/*.php'`: folder to watch for Tailwind`s classes
- `-w`: defines watch mode
- `-m`: minify output file



## CSS Styles
<info>This is just a basic setup. More details on how to customize Tailwind CSS can be found on the (link: https://tailwindcss.com/ text:Tailwind CSS website)</info>

After creating the build configuration, we create a basic css file and use the `@tailwind` directive to inject Tailwindâ€™s `base`, `components`, and `utilities` styles.
```css "/build/tailwind.css"
@tailwind base;
@tailwind components;
@tailwind utilities;
```

Our `build`directory should look like follows and we are ready to install Tailwind CSS.
```filesystem
build/
    package.json
    tailwind.css
```


## Install Tailwind CSS
Open the terminal window again (and leave it open), change to directory `build` and type the following command:
```bash
npm install tailwindcss@latest
```

## Build
Now we have a full functional basic setup and are ready to generate our css file. Be sure to be the `build` directory and start the `watch` or the `build` script as follows:

Use `watch` to observe changes and generate a css file on change:
```bash
npm run watch
```

Use `build` to generate a final minified css file:
```bash
npm run build
```

Both scripts check all php files inside the `site` directory for Tailwind CSS classes and writes them to the css file `site.css`. You just need to add the css source to your HTML markup like follows:
```html
<link href="/build/site.css" rel="stylesheet" />
```






----

Description: A walktrouh on how to install and use Tailwind CSS with Kirby.

----

Authors: - authors/christian-fickinger