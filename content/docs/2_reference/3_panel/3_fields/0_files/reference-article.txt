Title: Files

----

Intro:

A files select field that allows selecting one or multiple related files

----

Guide: content/files

----

Text:

The files field allows you to select one or more files.

(image: files.png)

## Example

```yaml
fields:
  downloads:
    label: Downloads
    type: files
```

## Field properties

(field-options: files)

## Limit the number of files

### Min and max files
You can set the minimum/maximum number of files that can be selected:

```yaml
fields:
  downloads:
    label: Select files...
    type: files
    min: 1
    max: 3
```

### Multiple or single mode

If you only want to select a single file, set `multiple` mode to `false` (default is `true`).

```yaml
fields:
  downloads:
    label: Select files...
    type: files
    multiple: false
```

## Layout

You can switch between `list` and `cards` layouts. Default is `list` layout.

```yaml
fields:
  downloads:
    label: Select files...
    type: files
    layout: cards
```

## Querying files

The `query` option lets you limit the set of files that can be included. When not set, it defaults to all files of the current page.

### Limit the set to images

```yaml
gallery:
  type: files
  query: page.images
```

You can use all file types available in Kirby here (`images`, `documents`, `videos`, `audio`, and `code`).

### Querying files from other pages

You can get as complex as you like, e.g. get all images from all children of the `photography` page that use the `cover` template:

```yaml
gallery:
  type: files
  query: site.find('photography').children.images.filterBy('template', 'cover')
```

You can find more examples of how you can use the query language in the (link: docs/guide/blueprints/query-language text: guide).

## Image options

<info>
Apart from showing no image, any image options you use will only apply to the 'card' layout, but not to the 'list' layout.
</info>

### `ratio`

A freely selectable image aspect ratio for various image styles such as movie trailers, movie posters, or simply portrait, landscape, square, etc.

```yaml
image:
  ratio: 16/9
```

### `cover`

Whether or not the image will fill (cover) the available image space and not show banding for images that don't match your chosen image aspect ratio.
Options: `true`, `false (default)`

```yaml
image:
  cover: true
```

### `back`

Set an image background behind the image, which will show if cover is not set to true as explained above.
Options: `pattern (default)`, `black`, `white`
```yaml

image:
  cover: true
  ratio: 1/1
  back: black
```

### No image

Don't want to see an image preview? Set the image options to `false` if you don't want to show an image, which reveals an icon instead:

```yml
image: false
```

## Upload options

By default, the files field allows you to upload files. You can define the `Add` button behavior with the `uploads` option: When clicking on the `Add` button, you can either select a file and/or upload a file (which is then automatically selected).

### Prevent uploading

You can alternatively set the `uploads` property to `false` to prevent any file uploads:

```yaml
gallery:
  type: files
  uploads: false
```

### Destination and template

By default, all files will be uploaded to the current page without any predefined template. But with the additional options, you can fetch files from anywhere, upload them to a specific page, or even control which file template should be assigned by default:

```yaml
gallery:
  type: files
  uploads:
    parent: site
    template: files-upload
```

If you want to upload to the current page and only assign a template, you can directly assign it to the `uploads` property:

```yaml
gallery:
  type: files
  uploads: files-upload
```

### Restricting uploads to certain file types

To restrict what types of files can be uploaded to the given destination, assign a file template using the `uploads` property, and in your file template, set the `accept` option. For more information see the docs about (link: docs/reference/panel/blueprints/file#accept text: file blueprints).

#### Supported file types

By default, Kirby supports (link: docs/guide/files/files#supported-file-types text: several files types).

To upload additional file types, you could (link: docs/reference/plugins/extensions/file-types text: register new file types with the `fileTypes` extension) in a plugin.

(docs: panel-picker-pagination field: files)

## How to use in templates/snippets

### Single file

To convert a single file to a file object, use the [`toFile()`](/docs/reference/templates/field-methods/to-file) method:

```php
<?php if($image = $page->cover()->toFile()): ?>
  <img src="<?= $image->url() ?>" alt="">
<?php endif ?>
```

### Multiple files

To work with or reference multiple files, create the group of files using the [`toFiles()`](/docs/reference/templates/field-methods/to-files) method:

```php
<?php
$images =  $page->gallery()->toFiles();
foreach($images as $image): ?>
  <img src="<?= $image->url() ?>" alt="">
<?php endforeach ?>
```
