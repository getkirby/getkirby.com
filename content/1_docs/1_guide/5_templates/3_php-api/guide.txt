Title: Kirby's PHP API

----

Intro: Kirby has a mighty PHP API, which you can use in your snippets, templates, controllers and plugins to access each and every bit and piece of data and aspect of your site and system.

----

Text:

## `$site`

The `$site` object represents the root of your site with all the information stored in `/content/site.txt`.

(link: docs/reference/objects/site class: btn text: Learn more about `$site` ›)

## `$pages`

The `$pages` object contains the first level of pages. It can be used to build the main menu or dive deeper into the structure of your site.

(link: docs/reference/objects/pages class: btn text: Learn more about `$pages` ›)

## `$page`

The `$page` object represents the currently active page. It gives you access to the page's data, attached files, subpages and more.

(link: docs/reference/objects/page class: btn text: Learn more about `$page` ›)

## `$kirby`

The `$kirby` class is the heart and soul of Kirby. It's the access point for registered users, the current request, route, plugins and more.

(link: docs/reference/objects/kirby class: btn text: Learn more about `$kirby` ›)

## Permissions

Some parts of Kirby's PHP API only work if you are logged in (or authenticated in other ways), because they respect the permissions of the currently logged in user. E.g. the page will not be allowed to be updated via `$page->update()`, unless the current user is logged in and has adequate permissions. This helps increase the security of your code, by blocking operations for users that are not authorised to do them. You can read more about user permissions and which ones exist here: (link: docs/guide/users/permissions text: Users permissions ›)

### Authentication

Users can log in through the (glossary: Panel) login page or any custom login form. To learn more about how to log in a user progamatically, read the reference for (link: docs/reference/objects/user/login text: $user->login()).

### Impersonate

One way to go without authentication is to (link: docs/reference/objects/kirby/impersonate text: impersonate) any user or even the special `kirby` super user, which has full permissions:

```php
<?php

$kirby = kirby();
$kirby->impersonate('kirby');

page('notes/a-great-article')->update([
  'author'  => 'Homer Simpson'
]);
```

The impersonation will only last for the current request.

