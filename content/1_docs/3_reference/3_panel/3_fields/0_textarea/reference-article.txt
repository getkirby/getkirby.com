Title: Textarea

----

Excerpt:

A textarea field, which auto-resizes and has built-in format buttons.

----

Guide: blueprints/fields

----

Text:

The textarea field creates a textarea for longer texts with automatic resizing and optional format buttons.

(screenshot: textarea.png)

## Example

```yaml
fields:
  text:
    label: Text
    type: textarea
```

## Field properties

(field-options: textarea)

## Sizes

In some section layouts, a small textarea looks lost. The `size` option sets an initial default height for empty textareas before auto-sizing kicks in. Available sizes:

- `small`
- `medium`
- `large`
- `huge`

```yaml
fields:
  text:
    label: Text
    type: textarea
    size: large
```

## Toolbar

### Disabling the toolbar

If the formatting toolbar should not be available, you can switch it off entirely:

```yaml
fields:
  text:
    label: Text
    type: textarea
    buttons: false
```

### Customizing the toolbar

You can also specify which buttons to show in the toolbar.

```yaml
fields:
  text:
    label: Text
    type: textarea
    buttons:
      - bold
      - '|'
      - link
      - email
```

## File upload and select

<since v="3.1.0">

(screenshot: file-selector.png)

The file upload and select button is super useful if you want to embed images or other files right in your text.

You can define the button behavior with the `files` and `uploads` options:

```yaml
textarea:
  type: textarea
  files: page.images
  uploads: textarea-upload
```

By default all files will be uploaded to the current page and without a predefined template. With the additional options you can fetch files from anywhere and upload them to specific pages. You can also control which file template should be assigned by default:

```yaml
textarea:
  type: textarea
  files:
    query: site.find("media").files.template("textarea-upload")
    image:
      cover: true
  uploads:
    parent: site.find("media")
    template: textarea-upload
```

You can also deactivate file uploads:

```yaml
textarea:
  type: textarea
  uploads: false
```

</since>

(docs: panel-field-max-and-min field: textarea)

## Monospace

<since v="3.2.0">
You can set the `font` option to `monospace`, for example for fields that contain code:

```yaml
fields: 
  text: 
    label: Text
    type: textarea
    font: monospace
```    
</since>


## How to use in templates/snippets

The usual way to render the value of a textarea field is using the `kirbytext()` method (or the shortcut `kt()`).

```php
<?= $page->text()->kirbytext() ?>
<?= $page->text()->kt() ?>
```

However, there might be situations, where you want to parse KirbyTags, but not render block level elements:

```php
<p><?= $page->text()->kt()->inline() ?></p>
```

For more field manipulations, check out Kirby's (link: docs/reference/templates/field-methods text: field methods).

