Title: Security Policy

----

Text:

## Supported Versions

Kirby **{{ latest }}** is the latest Kirby release.

There are no known vulnerabilities in all releases since **{{ noVulnerabilities }}**. Previous major releases have received backported fixes for known vulnerabilities, [see below](#past-security-incidents).

In the following table and calendar, you can find all major releases with their current support status:

{{ versions }}

<info>
If you need the version information from this page in a machine-readable format, you can use the (link: security.json text: JSON representation).
</info>

## Past Security Incidents

{{ incidents }}

## Security Guide

Please follow our (link: docs/guide/security text: security guide) to keep your Kirby installation secure.

## Reporting a Vulnerability

If you have spotted a vulnerability in Kirby's core or the Panel, please make sure to let us know immediately. We appreciate your efforts to responsibly disclose your findings, and will make every effort to acknowledge your contributions.

You can always contact us directly at **<security@getkirby.com>**.
If you want to encrypt your message, our GPG key is (link: pgp.asc text: 6E6B 057A F491 FFAD 363F  6F49 9101 10FA A459 E120).

You can also use the [security advisory form on GitHub](https://github.com/getkirby/kirby/security/advisories/new) to securely and privately report a vulnerability to us.

We will send you a response as soon as possible and will keep you informed on our progress towards a fix and announcement.

<warning>
Please do *not* write to us publicly, e.g. in the forum, on Discord or in a GitHub issue. A public report can give attackers valuable time to exploit the issue before it is fixed.

By letting us know directly and coordinating the disclosure with us, you can help to protect other Kirby users from such attacks.

Also please do *not* request a CVE ID from organizations like MITRE. The responsible CVE Numbering Authority (CNA) for Kirby is GitHub. We can and will request a CVE ID for each confirmed vulnerability and will provide it to you in advance of the coordinated release.
</warning>

----

Docs:

## Format of version constraints

Version constraints use [Composer's version constraint syntax](https://getcomposer.org/doc/articles/versions.md#writing-version-constraints).

## `Versions` field

The `Versions` field allows to find the support status of a particular version and enables update checks (is a new version available, is it an update or upgrade and what is its version number?).

### In this content file

Each entry MUST have a key with a Composer version constraint and the following fields:

- `shortName` contains a human-readable string of the release version.
- `initialRelease` marks the day (in a date format parseable by PHP) of the initial license-relevant release of the major version.
- `endOfActiveSupport` marks the day (in a date format parseable by PHP) when the following major version was released (can be `null`, which marks the current major release).
- `endOfLife` marks the day (in a date format parseable by PHP) when the version reached end-of-life.
- `latest` is the latest version that can be updated to for free from any version in the version range.

### In `security.json`

Each entry MUST have a key with a Composer version constraint, a `status` field (see below) and a human-readable `description` field.

Each Kirby version ever released MUST match at least one of the entries' keys.
The entries are evaluated from top to bottom, so the "most specific" entry MUST always come before a more general entry.

There MUST be a separate entry with the `status` value `active-support`, `security-support` or `end-of-life` for each major version that requires a paid upgrade. There MAY be separate entries for free major updates with a different support status.

There MUST be exactly one entry with the `status` value `latest`. It MUST be the first entry in the list.
There SHOULD be exactly one entry with the `status` value `no-vulnerabilities`. It MUST be the second entry in the list.

#### Possible `status` values

##### `latest`

This is a "fast path" that skips both the update check and the check for known vulnerabilities using the incident list.

The `latest` entry SHOULD be left untouched as it's auto-populated with the Kirby version of the getkirby.com site.

##### `no-vulnerabilities`

This is a "fast path" that skips the check for known vulnerabilities using the incident list.
During the update check, this entry is skipped and the next matching entry is used.

The `no-vulnerabilities` entry SHOULD be left untouched as it's auto-populated with the latest `fixed` version from the incident list.

##### `active-support`

This marks a version range that receives functionality updates, enhancements and bug fixes.

The `latest` field of the `active-support` entry MUST be set to the latest version that can be updated to for free from any version in the version range. It SHOULD be set to `{{ latest }}`, which will be auto-populated with the Kirby version of the getkirby.com site.

The `initialRelease` field of the `active-support` entry SHOULD be set to a date value parseable by PHP that marks the date of initial license-relevant release of the major version if the major version follows the Kirby 4+ license model.

##### `security-support`

This marks a version range that only receives security updates.

The `latest` field of the `security-support` entry MUST be set to the latest version that can be updated to for free from any version in the version range.

The `initialRelease` field of the `security-support` entry SHOULD be set to a date value parseable by PHP that marks the date of initial license-relevant release of the major version if the major version follows the Kirby 4+ license model.

`security-support` entries MAY also have a `status-link` field that points to an URL with more information on the support status of this version range. The status link defaults to an empty value (no link).

##### `end-of-life`

This marks a version range that receives no updates whatsoever.

The `latest` field of the `end-of-life` entry MUST be set to the latest version that can be updated to for free from any version in the version range.

`end-of-life` entries MAY have a `status-link` field that points to an URL with more information on the support status of this version range. The status link defaults to https://getkirby.com/security/end-of-life.

## `Urls` field

The `Urls` field contains URL templates for each version range. They can be used to generate links to the release notes or to ZIP files of each version.

The key of each entry MUST be set to a Composer version constraint.
Each Kirby version ever released MUST match at least one of the entries' keys.
The entries are evaluated from top to bottom, so the "most specific" entry MUST always come before a more general entry.

Each entry MAY have the following fields (required fields are marked with a `*`):

- `changes` (*): URL to a page with more information on a particular version
- `upgrade` (*): URL to a page with migration information for users upgrading from this version range to the latest major release
- `download`: URL to a ZIP file with the `kirby` folder of a particular version

All fields MAY use the following placeholders in the URL templates that are dynamically replaced by the client:

- `{{ version }}`: A version in the version range of the entry's key
- `{{ current }}`: The current Kirby version of the installation

The `changes` and `download` fields MUST use the `{{ version }}` placeholder.

## `Php` field

The `Php` field contains the end-of-life dates of each major PHP release according to https://www.php.net/supported-versions.php. They can be used to warn users who use an unsupported version.

The key of each entry MUST be set to a string of the major PHP release. The value MUST be set to a ISO 8601 date value.

## `Incidents` field

The `Incidents` field lists all past security incidents (vulnerabilities in Kirby). It allows to check if a particular version is affected by known vulnerabilities. If this is the case, it points to more information and the version(s) that fixed the vulnerability.

Each incident entry MAY have the following fields (required fields are marked with a `*`):

- `affected` (*): Composer version constraint of all affected versions that had security support when the vulnerability was discovered;
  the oldest major release SHOULD use the `<=` syntax to cover the previous end-of-life major releases as well (unless they are not affected)
- `fixed` (*): Comma-separated list of all versions that fixed this vulnerability
- `description` (*): Human-readable, short description of the vulnerability
- `link` (*): URL to a page with the detailed vulnerability description
- `severity` (*): Either `low`, `medium`, `high` or `critical` (according to the FIRST CVSS calculator)
- `score`: The numeric CVSS score if available (according to the FIRST CVSS calculator)
- `cve`: Assigned [CVE ID](https://cve.mitre.org), if available
- `cvss`: Vector string for the [Temporal CVSS Score](https://www.first.org/cvss/calculator/3.1)

## `Messages` field

The `Messages` field lists custom security messages by Kirby and PHP version. This can be used in emergencies to get a security-related information out as quickly as possible.

Each message entry MAY have the following fields (required fields are marked with a `*`):

- `text` (*): Human-readable text of the message
- `kirby` (*): Composer version constraint of all affected Kirby versions (can be `*` for "any")
- `php` (*): Composer version constraint of all affected PHP versions (can be `*` for "any")
- `link`: URL to a page with the detailed description
- `icon`: Custom icon name (see https://getkirby.com/docs/reference/panel/icons); defaults to `alert`

----

Versions:

# Only v3 and older need to be managed here, v4+ are determined automatically

1.*:
    shortName: v1
    initialRelease: 2012-01-09
    endOfActiveSupport: 2014-10-07
    endOfLife: 2016-02-01
    latest: 1.1.2
2.*:
    shortName: v2
    initialRelease: 2014-10-07
    endOfActiveSupport: 2019-02-05
    endOfLife: 2021-01-01
    latest: 2.5.14
3.* <3.5:
    shortName: v3
    initialRelease: 2019-02-05
    endOfActiveSupport: 2020-12-15
    endOfLife: 2021-11-16
    latest: 3.10.1.2
3.5.*:
    shortName: v3.5
    initialRelease: 2020-12-15
    endOfActiveSupport: 2021-11-16
    endOfLife: 2023-11-16
    latest: 3.10.1.2
3.6.*:
    shortName: v3.6
    initialRelease: 2021-11-16
    endOfActiveSupport: 2022-06-27
    endOfLife: 2024-06-27
    latest: 3.10.1.2
3.7.*:
    shortName: v3.7
    initialRelease: 2022-06-27
    endOfActiveSupport: 2022-10-06
    endOfLife: 2024-06-27
    latest: 3.10.1.2
3.8.*:
    shortName: v3.8
    initialRelease: 2022-10-06
    endOfActiveSupport: 2023-01-17
    endOfLife: 2024-12-02
    latest: 3.10.1.2
3.9.*:
    shortName: v3.9
    initialRelease: 2023-01-17
    endOfActiveSupport: 2023-11-28
    endOfLife: 2025-12-01
    latest: 3.10.1.2
3.10.*:
    shortName: v3.10
    initialRelease: 2023-12-19
    endOfActiveSupport: 2023-12-19
    endOfLife: 2025-12-01
    latest: 3.10.1.2

----

Urls:

# Static placeholders (filled by getkirby.com):
# - `{{ latest }} `: Version number of latest release
# - `{{ latestMajor }}`: Version number of latest release (major part only)
# - `{{ noVulnerabilities }}`: Minimum version number without vulnerabilities
# - `{{ releasePages }}`: Version constraint for all available release pages
# Dynamic placeholders (filled by the client):
# - `{{ version }}`: A version in the version range of the entry's key
# - `{{ current }}`: The current Kirby version of the installation

{{ releasePages }}:
    changes: https://getkirby.com/releases/{{ version }}
    download: https://github.com/getkirby/kirby/archive/refs/tags/{{ version }}.zip
    upgrade: https://getkirby.com/releases/{{ latestMajor }}
">=3.0.0":
    changes: https://github.com/getkirby/kirby/releases/tag/{{ version }}
    download: https://github.com/getkirby/kirby/archive/refs/tags/{{ version }}.zip
    upgrade: https://getkirby.com/releases/{{ latestMajor }}
2.*:
    changes: https://github.com/getkirby-v2/kirby/releases/tag/{{ version }}
    download: https://github.com/getkirby-v2/kirby/archive/refs/tags/{{ version }}.zip
    upgrade: https://getkirby.com/releases/{{ latestMajor }}
1.*:
    changes: https://github.com/getkirby-v1/starterkit/releases/tag/{{ version }}
    upgrade: https://getkirby.com/releases/{{ latestMajor }}

----

Php:

# End-of-life dates for each major PHP version
# according to https://www.php.net/supported-versions.php

"8.0": 2023-11-26
"8.1": 2025-12-31
"8.2": 2026-12-31
"8.3": 2027-12-31
"8.4": 2028-12-31

----

Messages:
