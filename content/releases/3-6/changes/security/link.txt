Title: Security
----
Features:

#### Sanitization

- Added server-side sanitization in the writer field on field changes for extra security against XSS attacks
- New `Kirby\Toolkit\Dom` class to parse, modify and sanitize DOM-based documents (XML and HTML)
- New `Kirby\Sane\Html` class for validating and sanitizing HTML files or HTML snippets

#### Escaping
- The default block snippet for the `image` block now escapes the content output from the source, alt and link fields. This protects against XSS attacks against site visitors.
- (method: Kirby\Toolkit\Str::safeTemplate text: Str::safeTemplate($string, $data)), which escapes HTML from all regular query placeholders and allows HTML with the new `{< site.myMethodWithHtml >}` syntax.
- Safe templates are now also available for the `Page`, `User`, `File` and `Site` classes with the new `$model->toSafeString()` method.

#### Sane classes
- Improved error messages for file validation/sanitization errors (`Sane` classes)
- The `Sane` classes now have proper XML namespace support so that custom namespace prefixes are properly detected.
- All `Sane` classes now support sanitization next to validation. We will integrate this into more places in the Panel (fields and file uploads) in future releases.

#### Remote requests
- The `Remote` class now by default prefers the system certificate authority bundle (CA bundle) for verifying remote TLS connections if a bundle is configured in `php.ini` (`curl.cainfo` option). If no bundle is configured, Kirby will still use its internal CA bundle. You can override this behavior with the (link: docs/reference/system/options/remote#configuring-the-list-of-allowed-certificate-authorities-cas-for-https-requests text: `remote.ca` option) as before.

#### Files
- (method: Kirby\Filesystem\File::sha1 text: $file->sha1()), which generates an SHA1 hash of the given file

#### Code Quality
- Updated npm dependencies [#3744](https://github.com/getkirby/kirby/pull/3744)

----
Breaking:

#### Panel

- Several blueprint options that use the **(link: docs/guide/blueprints/query-language text: query syntax)** were updated to **escape raw HTML** output that may lead to XSS attacks. HTML code directly in the blueprint option (e.g. for formatting) still works as normal. If queries need to return HTML, you can use the new `{< >}` syntax. In this case you need to ensure manually that the returned HTML code is safe. With the `{{ }}` syntax, Kirby performs the escaping for you.

```yaml
# works as normal
info: "This is <strong>{{ page.important }}</strong>"

# custom site method returns HTML, new `{< >}` syntax needed
info: "via {< site.myMethodWithHtml >}"
```

#### Core

- The public static configuration attributes of the `Sane` classes have been renamed for consistency with the new `Toolkit\Dom` class.
- The `Sane\Svg::$allowedNamespaces` attribute now expects namespace reference names as the array keys instead of full attribute names (so `xmlns:xlink` should become just `xlink` and `xmlns` should become an empty string).
- The `Sane\Svg::$allowedTags` attribute (before `$allowedElements`) now is an associative array with the allowed attributes for this tag as the value. Attributes defined in `$allowedAttrs` are allowed globally and don't need to be copied to each tag.
