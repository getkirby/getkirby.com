Title: Plugins
----

Features:

#### Fiber - a whole new way of Panel extensions

We’ve spent the last months working on a brand new backend architecture for the Panel. Moving away from a single page application to a more traditional approach with a simplified server-rendered backend. The new architecture is inspired by Inertia.js and simplifies our Panel and Panel plugins in ways that we’ve never dreamed of. (link: /releases/3.6/fiber text: Learn more about Fiber ›)

- New (link: docs/reference/plugins/extensions/panel-areas text: Panel areas) extension
- New (link: docs/reference/plugins/extensions/panel-dialogs text: Panel dialogs) extension
- New (link: docs/reference/plugins/extensions/panel-dropdowns text: Panel dropdowns) extension
- New (link: docs/reference/plugins/extensions/panel-search text: Panel search) extension

#### Supercharge blocks & layouts

- New custom (link: docs/reference/plugins/extensions/block-methods text: block methods) extensions
- New custom (link: docs/reference/plugins/extensions/blocks-methods text: blocks methods) extensions
- New custom (link: docs/reference/plugins/extensions/layout-methods text: layout methods) extensions
- New custom (link: docs/reference/plugins/extensions/layouts-methods text: layouts methods) extensions
- New custom (link: docs/reference/plugins/extensions/layout-column-methods text: layout column methods) extensions
- New (link: docs/reference/plugins/extensions/block-models text: block models) extensions

#### Dynamic blueprints
- Define (link: docs/reference/plugins/extensions/blueprints#callback-definition text: **dynamic blueprints** as callback functions).

#### Craft your own things for the Panel

- **(link: docs/reference/plugins/ui#css-properties text: Custom CSS properties)** can now be used throughout the Panel and in every plugin. Or you overwrite our default properties in your (link: docs/reference/system/options/panel#custom-panel-css text: custom panel.css).
- More **(link: docs/reference/panel/styling#css-selectors text: CSS selectors)** to customize the Panel styling
- New components:
  - (link: docs/reference/plugins/ui/items text: `k-items`), (link: docs/reference/plugins/ui/item text: `k-item`) and (link: docs/reference/plugins/ui/item-image text: `k-item-image`)
  - (link: docs/reference/plugins/ui/options-dropdown text: `k-options-dropdown`)
  - (link: docs/reference/plugins/ui/panel text: `k-panel`) as general wrapper and (link: docs/reference/plugins/ui/inside text: `k-inside`) as wrapper for views that want to feature the Panel topbar
- Improved documentation for (link: docs/reference/plugins/ui text: UI kit components)
- Improved documentation for (link: docs/reference/plugins/internals text: Panel internals) such as helpers and store

#### More…
- New **(link: docs/reference/plugins/extensions/file-types text: custom file types)** extension
- **Custom email provider** via new (link: docs/reference/plugins/components/email text: email core component)


----

Enhancements:

#### Custom CSS properties

With 3.6 we leave SCSS behind and fully embrace modern CSS with (link: docs/reference/plugins/ui#css-properties text: custom properties) in the Panel.

#### Logical CSS properties

Our RTL support is now powered by [CSS logical properties](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties), for now with fallback code for older browsers.

We encourage all plugin developers to look into logical properties for their Panel plugins. The fallback handling is natively supported by the [kirbyup](https://github.com/johannschopplich/kirbyup) builder.

#### Vue
- New `theme` property for `k-dropdown-content` to switch between `dark` (default) and `light` dropdowns
- New `$store.dispatch("content/clear")` Vuex action that removes all unsaved changes from localStorage
- New JS helper to deep-merge objects (`helpers/object.js`)
- New `$helper.clipboard` helper handling reading from/writing to the clipboard
- New `$helper.color` helper for turning a string into a valid CSS color value
- `$t()` JS helper now supports a fallback value as third parameter
- New `v-direction` directive to set the `dir` attribute based on the current content translation [#3568](https://github.com/getkirby/kirby/pull/3568)
- The `RadioInput` component now supports (escaped) HTML in the `info` property for radio options.
- The `k-dropdown-content` component is now compatible with our dynamic Fiber dropdowns. You can pass a string for the `options` prop and the component will automatically load the matching Fiber dropdown defined in PHP.
- Moved offline warning to new `k-offline-warning` component.
- Default block previews can now be overridden. [#3776](https://github.com/getkirby/kirby/issues/3776)
- Add `data-id` for drawer and blocks
- Updated inline docs for the writer field

#### More …

- Improved plugin asset resolver [#2422](https://github.com/getkirby/kirby/issues/2422)

----

Fixes:

- Extending a non-existing Vue component is ignored now instead of throwing a console error and breaking the Panel.
- `this.$helper.upload` now correctly uses the method parameter.
- `k-progress` now updates correctly when the prop value changes.
- Added fallbacks for deprecated CSS classes [#3706](https://github.com/getkirby/kirby/issues/3706)

----

Breaking:

#### Custom Panel views

- Using custom Panel views (incl. routing, breadcrumbs...) in plugins has changed fundamentally. You will have to use the (link: docs/reference/plugins/extensions/panel-areas text: new Panel areas extension) now.
- Accordingly, the frontend extension `panel.plugin({ view: [...] })` has been  removed. Use Panel areas instead.

#### `Kirby\Panel` namespace related

- If you have modified the `->panel*()` methods in custom models, you now need to return a custom Panel model (based on `Kirby\Panel\Model`) at `$page->panel()` which then takes care of all Panel-related functions, e.g. if you had customized `$page->panelImage()` you need a custom `Kirby\Panel\Page` to then customize `$page->panel()->image()`.
- Use `$model->panel()->image()` instead of `$model->panel()->icon()`.
- `$model->panel()->image()` doesn't return `cards` and `list` keys anymore. Instead, `src` and `srcset` keys at the top level that correspond to the new `$layout` parameter.

#### Vue component changes

| Removed | Use instead |
|-|-|
| `k-app` | `k-panel`, optionally  `k-inside` to include topbar |
| `k-cards` | `k-items`  with `layout: cards` |
| `k-card` | `k-item` with `layout: cards` |
| `k-list` | `k-items`  with `layout: list` |
| `k-list-item` | `k-item` with `layout: list` |
| `k-browser-view` | - |
| `k-custom-view` | - |

- Removed `icon` prop from `k-card` and `k-list-item`. Pass data as part of the `image` prop instead to new (link: docs/reference/plugins/ui/item text: `k-item` component).
- If the `cover` option is not defined for a section, it is disabled by default.
- The `<k-box text="..." />` property is now rendered as plain text by default instead of as HTML code. For the previous behavior use `<k-box text="..." :html="true" />`.

#### Helpers & libraries

- `vue-router` has been completely removed, use (link: docs/reference/plugins/extensions/panel-areas text: Panel areas) to define custom Panel routes.
- The `previewThumb` helper has been removed. `k-item-image` takes care of processing the image data correctly inside `k-item`.

#### Vuex

- The following methods from `vuex-i18n` are no longer available in the new custom implementation: `$tc`,  `$tlang`, `$i18n.localeExists`, `$i18n.keyExists`. Translation strings cannot be added dynamically anymore, only through our (link: docs/reference/plugins/extensions/translations text: official extension).
- The `content` module doesn't handle content locking information anymore. This in now provided directly to the model views.
- The `language` module has been removed, use `this.$language` and `this.$languages` instead.
- The `system` module has been removed, use `this.$system` instead.
- The `translation` module has been removed, use `this.$translation` instead.
- The `user` module has been removed, use `this.$user` instead.
- `$store.dispatch('breadcrumb')` and `$store.dispatch('title')` have been removed. Use Panel areas instead.

#### API methods

The following outdated $api methods have been removed in Vue:

- `$api.pages.breadcrumb`
- `$api.files.breadcrumb`
- `$api.users.breadcrumb`
- `$api.site.breadcrumb`
- `$api.site.options`
- `$api.roles.options`
- `$api.translations.options`

#### CSS Selectors

- `.k-panel[data-translation]` is now `.k-panel[data-language]`.
- `.k-panel[data-translation-default]` is now `.k-panel[data-language-default]`.
- CSS class `.k-block-handle` has been replaced with `.k-sort-handle`.
