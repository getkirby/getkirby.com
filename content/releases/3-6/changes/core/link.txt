Title: Core
----

Features:

#### Image formats

- **WebP & AVIF support:** With increasingly better browser support for WebP and AVIF on the horizon, optimizing images has become a lot easier. Our image processing engine now supports both formats. (link: docs/guide/files/resize-images-on-the-fly#image-formats text: Learn more ›)

```php
<?= $image->thumb(['width' => 200, 'format' => 'webp']) ?>
<?= $image->thumb(['width' => 200, 'format' => 'avif']) ?>
```

- Set a (link: docs/reference/system/options/thumbs#format text: default thumb format) in your config.

#### More powerful config options

- **(link: docs/reference/system/options/kirbytext text: Global KirbyText options)** that allow you to provide default values for all KirbyTag attributes in your config.

#### Sparkles

- New (method: Kirby\Cms\Blocks::hasType text: $blocks->hasType()), (method: Kirby\Cms\Layouts::toBlocks text: $layouts->toBlocks()) and (method: Kirby\Cms\Layouts::hasBlockType text: $layouts->hasBlockType()) class methods
- (method: Kirby\Toolkit\A::map text: A::map($array, $callback)) – a simple wrapper around `array_map` to fix the weird, inconsistent argument order.
- New (method: Helper::router text: router()) helper
- (method: Kirby\Cms\System::title()), which we now use for all emails to replace "Kirby Panel" as generic title.
- (method: Kirby\Cms\Files::size text: $files->size()) and (method: Kirby\Cms\Files::niceSize text: $files->niceSize()) to get the total size of all files in a collection.


----

Enhancements:

#### Templating

- The video embedding helpers and methods now use a much more robust URL parser with support for local and remote URLs. The same parser is used in the Panel for consistency. [#3074](https://github.com/getkirby/kirby/pull/3074)
- The video helper now allows custom `<iframe>` attributes

#### Files

- The `avif` file extension is now considered viewable. [#2877](https://github.com/getkirby/kirby/pull/2877)
- Invalid media URLs now render the full error page instead of a simple error to avoid information leaks and to allow overriding the error behavior with custom code on the error page. [#3202](https://github.com/getkirby/kirby/pull/3202)
- `F::relativepath()` now supports file paths with an unrelated base by prefixing `../` to build a relative path. [#3267](https://github.com/getkirby/kirby/issues/3267)
- `F::size()` and `F::niceSize()` accept an array of file paths.
- `Dir::size()` has a new `$recursive` parameter to calculate the total size of the directory.

#### API

- Improved API error paths when using a custom directory setup

#### Configuration

- The new `license` root allows to store the license outside of the config dir for easier deployments and multi-site setups.

#### Code quality

- Improved docblocks for the `HasChildren` trait [#3791](https://github.com/getkirby/kirby/pull/3791)
- Additional unit tests for `Filesystem`, `Cms`, `Form`, `Image` and `Panel` classes
- Cleaner solution to ignore entire files from code coverage

#### More …

- `Html::encode()` uses the `ENT_QUOTES` constant now for `htmlentities()`, converting both double and single quotes.
- `Str::widont` applies to punctuation with gap.
- The `Kirby\Data\Json::decode()` and `Kirby\Data\Xml::decode()` methods now accept empty strings and treat them as an empty data set (empty array) for consistency with `Kirby\Data\Txt::decode()` and `Kirby\Data\Yaml::decode()`. [#3565](https://github.com/getkirby/kirby/pull/3565)

----

Fixes:

#### Blocks

- Hidden blocks are no longer visible in layouts. [#3857](https://github.com/getkirby/kirby/issues/3857)

#### Pages

- Changing the slug of a page with an irrelevant `.lock` file no longer causes PHP to completely hang. [#2516](https://github.com/getkirby/kirby/issues/2516)

#### Files

- Fixed unstable links/hashes for media files [#3646](https://github.com/getkirby/kirby/issues/3646)
- Fixed filename collision for cropped image files [#3418](https://github.com/getkirby/kirby/issues/3418)
- The `image/svg` MIME type is now recognized by the `Sane` classes

#### Databases

- Fixed inconsistent return types between the `Query` class insert method and shortcut `Db::$queries['insert']` [#3140](https://github.com/getkirby/kirby/issues/3140)
- Fixed inner join queries [#2501](https://github.com/getkirby/kirby/issues/2501)

#### Toolkit

- `Str::accepted` always returns a float as `quality` value (before default `1` as int, all actual quality values as string, e.g. `'0.7'`) [#3393](https://github.com/getkirby/kirby/pull/3393)
- `Str::pool()`: The passed `$type` parameter is now treated case-insensitively. [#3393](https://github.com/getkirby/kirby/pull/3393)
- `Str::pool()` now also returns a string (if set via the second argument) if an array of types is passed as  first argument [#3393](https://github.com/getkirby/kirby/pull/3393)

#### More …

- The `$field->replace()` method no longer returns the model ID for empty fields, instead an empty string is returned as expected. [#3652](https://github.com/getkirby/kirby/issues/3652)
- `User::changeEmail()` and `System::register()` now convert the provided email address to lowercase for better reliability. [#3307](https://github.com/getkirby/kirby/pull/3307)
- Fixed return type for `Kirby\Cms\App::translation()` in DocBlock [#3383](https://github.com/getkirby/kirby/pull/3383)
- Fixed `tc()` helper docblock and parameter typing [#3474](https://github.com/getkirby/kirby/issues/3474)
- Fixed validation code for the `Kirby\Form\FieldClass` class

----

Breaking:

#### PHP
- Kirby no longer supports PHP 7.3, which will reach its [end-of-life date](https://www.php.net/supported-versions.php) soon. We will add support for PHP 8.1 to Kirby as soon as possible after the official release of PHP 8.1.

#### Templating
- The video embedding helpers and methods no longer throw exceptions if the provided URL is invalid, instead `null` is returned.
- Hidden blocks in the layout field will no longer be visible (as expected).
- `Html::encode()`: Single quotes now are also converted.

#### API
- All API endpoints for content locking/unlocking don't display an exception anymore when content locking isn't supported.

#### Files
- The crop keyword is now always present in filenames for cropped files. All center cropped files need to be regenerated.
- File hooks: the `$upload` parameter is now a `Kirby\Filesystem\File` object, before `Kirby\Image\Image`.
- `Kirby\Image\Image::__toString()` returns the HTML `<img>` tag instead of the root string.
- `Kirby\Filesystem\File::header()` now returns `void` instead of an empty `string` by default.
- `F::modified()` does no longer calculate a maximum between mtime and ctime for file changes. This could in theory lead to different timestamps in some scenarios. Very unlikely though.
- `F::niceSize()` doesn't check anymore whether the file exists.

#### Code Quality

- Some argument and property types are now more specific and therefore stricter. [#3282](https://github.com/getkirby/kirby/pull/3282), [#3241](https://github.com/getkirby/kirby/pull/3241)

#### Deprecated code that has been removed with 3.6.0

| Removed | Use instead |
|-|-|
| `Kirby\Cms\Asset::alt()` | - |
| `Kirby\Cms\Page::sort()` | `Kirby\Cms\Page::changeSort()` |
| `Kirby\Cms\KirbyTags::$tagClass` | You cannot set the class for KirbyTag objects to be created via `KirbyTags::parse()` anymore. |

#### Slugs in multi-language setups

- Slugs in content files of the default language will be ignored. The slugs for the default language are now only decided by the folder names.

<info>
To check if you are affected by this, you can use our **(link: https://github.com/getkirby/kirby/releases/download/3.6.0/content-migration-checker.zip text: migration plugin)**. Place it in `site/plugins` and visit any frontend page of your Kirby site to check if you need to migrate some of your pages. We have tested the plugin in Kirby 3.5 and 3.6, so you can use it before or after the upgrade.
</info>

#### More …
- `$files->add()` and `$users->add()` now throw exceptions when something other than a `File`/`User` object, a `Files`/`Users` object or a file/user ID is passed to them. Empty values (`null`, `false` and `true`) are silently ignored. [#3248](https://github.com/getkirby/kirby/pull/3248)
- `Cms\Collection::has()`: 1st parameter got renamed to `$key`.
- `Cms\Collection::indexOf()`: 1st parameter got renamed to `$needle`.
- `Cms\Collection::query()`: 1st parameter got renamed to `$arguments`.

----

Refactoring:

#### Namespace changes

We refactored many file-related classes and started to gather all of them in the new `Kirby\Filesystem` namespace:

| Before 3.6 | In 3.6 | Description |
|-|-|-|
| Kirby\Toolkit\File | `Kirby\Filesystem\File` | Everything related to a file in the filesystem - takes over a lot of functionality that was previously part of `Kirby\Image\Image` even for non-images. |
| Kirby\Image\Image | `Kirby\Image\Image` | Now extends `Kirby\Filesystem\File` and adds image-related methods (e.g. `dimensions`, `exif`). |
| Kirby\Cms\FileFoundation | `Kirby\Filesystem\IsFile` | Adds method-proxying to an asset object - either to `Kirby\Filesystem\File` or `Kirby\Image\Image` depending on the file type of the `$root` property. |
| Kirby\Cms\Asset | `Kirby\Filesystem\Asset` | |
| Kirby\Cms\Filename | `Kirby\Filesystem\Filename` | |
| Kirby\Toolkit\Dir | `Kirby\Filesystem\Dir` | |
| Kirby\Toolkit\F | `Kirby\Filesystem\F` | |
| Kirby\Toolkit\Mime | `Kirby\Filesystem\Mime` | |

We also moved and merged some more classes to simplify the class setup:

| Before 3.6 | In 3.6 | Reference |
|-|-|-|
| Kirby\Cms\Form | `Kirby\Form\Form` | [#3312](https://github.com/getkirby/kirby/pull/3312) |
| Kirby\Cms\KirbyTag | `Kirby\Text\KirbyTag` | [#3296](https://github.com/getkirby/kirby/pull/3296) |
| Kirby\Cms\KirbyTags | `Kirby\Text\KirbyTags` | [#3296](https://github.com/getkirby/kirby/pull/3296) |

<info>
For all these changes, we have added class aliases that we will keep around for the coming versions. This will make sure that your class references continue to work. We still encourage you to refactore your own code if you use one of those classes.
</info>

#### New `Kirby\Panel` classes

We've overhauled our Panel-specific code and moved everything into a new `Kirby\Panel` namespace. The new namespace contains classes that handle Panel-specific model logic in classes like `Kirby\Panel\Page` or `Kirby\Panel\File`.

We added a new `->panel()` method to all models to access the Panel objects, so `$page->panelImage()` is now `$page->panel()->image()`.

| Before 3.6 | In 3.6 |
|-|-|
| `$page->dragText()` | `$page->panel()->dragText()` |
| `$page->panelId()` | `$page->panel()->id()` |
| `$page->panelImage()` | `$page->panel()->image()` |
| `$page->panelOptions()` | `$page->panel()->options()` |
| `$page->panelPath()` | `$page->panel()->path()` |
| `$page->panelPickerData()` | `$page->panel()->pickerData()` |
| `$page->panelUrl()` | `$page->panel()->url()` |

The old methods will keep working for now, but will be removed eventually.

In addition, we moved and merged some other classes to streamline the setup:

| Before 3.6 | In 3.6 |
|-|-|
| Kirby\Cms\Panel | `Kirby\Panel\Panel` |
| Kirby\Cms\PanelPlugins | `Kirby\Panel\Plugins` |

#### More…

- `$field->html()` uses `Html::encode()`

----

Deprecated:

As part of modernizing our code base, we have marked some parts as deprecated in 3.6. Most of these parts will throw a deprecation warning when you are still using them. They will be removed in a future release. Let's point you towards the alternatives you can use instead:

#### API Endpoints

| Deprecated | Use instead | Throws warning | Removed in |
|-|-|-|-|
| `GET pages/(:any)/children/blueprints` | `GET pages/(:any)/blueprints` | yes | 3.7.0 |
| `GET site/children/blueprints` | `GET site/blueprints` | yes | 3.7.0 |
| `GET (:all)/lock` | - | yes | 3.7.0 |
| `GET (:all)/unlock` | - | yes | 3.7.0 |

#### API Fields

| Deprecated | Use instead | Throws warning | Removed in |
|-|-|-|-|
| `page.panelIcon` | `page.panelImage` | yes | 3.7.0 |
| `file.panelIcon` | `file.panelImage` | yes | 3.7.0 |

#### Permissions

| Deprecated | Use instead | Removed in |
|-|-|-|
| Users `settings` access permission | `system` and `languages` | 3.7.0 |

#### PHP Methods

| Deprecated | Use instead | Throws warning | Removed in |
|-|-|-|-|
| `Kirby\Cms\App::setLocale()` | `Kirby\Toolkit\Locale::set()` | yes | 3.7.0 |
| `Kirby\Cms\Block::_key()` | `Kirby\Cms\Block::type()` | yes | 3.7.0 |
| `Kirby\Cms\Block::_uid()` | `Kirby\Cms\Block::id()` | yes | 3.7.0 |
| `Kirby\Toolkit\I18n::fallback()` | `Kirby\Toolkit\I18n::fallbacks()[0]` | yes | 3.7.0 |
| `$model->dragText()` | `$model->panel()->dragText()` | 3.7.0 | 3.8.0 |
| `$model->panelIcon()` | `$model->panel()->image()` | 3.7.0 | 3.8.0 |
| `$model->panelImage()` | `$model->panel()->image()` | 3.7.0 | 3.8.0 |
| `$model->panelImageSource()` | `$model->panel()->imageSource()` | 3.7.0 | 3.8.0 |
| `$model->panelPath()` | `$model->panel()->path()` | 3.7.0 | 3.8.0 |
| `$model->panelPickerData()` | `$model->panel()->pickerData()` | 3.7.0 | 3.8.0 |
| `$model->panelOptions()` | `$model->panel()->options()` | 3.7.0 | 3.8.0 |
| `$model->panelUrl()` | `$model->panel()->url()` | 3.7.0 | 3.8.0 |
| `Kirby\Toolkit\Str::isUrl()` | `Kirby\Toolkit\V::url()` | 3.7.0 | 3.8.0 |

#### Vue code

| Deprecated | Use instead | Throws warning | Removed in |
|-|-|-|-|
| Vuex `heartbeat` module | - | yes | 3.7.0 |
| `<k-text align="right">` | `<k-text align="end">` | - | 3.7.0 |

#### More …
- The `page()` helper now throws a deprecation warning if multiple IDs get passed. Will be enforced in 3.7.0 by only returning the first page. Use (method: Helper::pages text: pages()) for multiple pages instead.
- `pages()` will now throw a deprecation warning if a single ID gets passed. Will be enforced in 3.7.0 by always returning a `Pages` collection. Use (method: Helper::page text: page()) for a single page instead.
- `Str::template()`: the parameters `$fallback`, `$start` and `$end` have been deprecated and throw a deprecation warning. Use an `$options` array with `fallback`, `start` and/or `end` keys as third parameter instead.
- Creating a `Kirby\Cms\File` without a `parent` property has been deprecated and throws a warning. Starting in 3.7.0 the property will be required and cause a breaking error if not passed. [#3372](https://github.com/getkirby/kirby/pull/3372)
- Use Tailwind `sr-only` utility instead of `k-offscreen`. The old class name is still available to avoid a breaking change.
