Title: Breaking changes
----
Text:

Breaking changes in minor releases? 3.6 is not a minor release. We follow the pattern `{generation.major.minor.patch}`

`3.6.0.0` is the 6th major release for Kirby 3 and it's a really big and important step. We don't take breaking changes lightly but they sometimes have to happen in order to keep moving forward.

## Panel

### For all users

- New minimum **browser requirements** (browsers with native ESM and dynamic `import()` support):

    - Firefox 67+
    - Chrome 63+
    - Edge 79+
    - Opera 50+
    - macOS Safari 11.1+
    - Safari iOS 11+
    - Android Browser 92+
    - Chrome for Android 92+


- Several blueprint options that use the **(link: docs/guide/blueprints/query-language text: query syntax)** were updated to **escape against raw HTML** output that may lead to XSS attacks. HTML code directly in the blueprint option still works as normal. If queries need to return HTML, you can use the new `{< >}` syntax. In this case you need to ensure manually that the returned HTML code is safe. With the `{{ }}` syntax, Kirby performs the escaping for you.

```yaml
# works as normal
info: "This is <strong>{{ page.important }}</strong>"

# custom site method returns HTML, new `{< >}` syntax needed
info: "via {< site.myMethodWithHtml >}"
```

- Direct URLs for tabs have changed, e.g. now `/panel/site/?tab=yourTabName`
- Direct URLs for the users view have changed, e.g. now `/panel/users/?role=yourRole`


### Custom Panel views
- Using custom Panel views (incl. routing, breadcrumbs...) in plugins has changed fundamentally. You will have to use the (link: docs/reference/plugins/extensions/panel-areas text: new Panel areas extension) now.
- Accordingly, the frontend extension `panel.plugin({ view: [...] })` has been  removed. Use Panel areas instead.

### `Kirby\Panel` namespace related

- If you have modified the `->panel*()` methods in custom models, you now need to return a custom Panel model (based on `Kirby\Panel\Model`) at `$page->panel()` which then takes care of all Panel-related functions, e.g. if you had customized `$page->panelImage()` you need a custom `Kirby\Panel\Page` to then customize `$page->panel()->image()`.
- Use `$model->panel()->image()` instead of `$model->panel()->icon()`
- `$model->panel()->image()` doesn't return `cards` and `list` keys anymore. Instead, `src` and `srcset` keys at the top level that correspond to the new `$layout` parameter.

### Vue component changes

| Removed | Use instead |
|-|-|
| `k-app` | `k-inside` (authenticated) or `k-outside` (unauthenticated) |
| `k-cards` | `k-items`  with `layout: cards` |
| `k-card` | `k-item` with `layout: cards` |
| `k-list` | `k-items`  with `layout: list` |
| `k-list-item` | `k-item` with `layout: list` |
| `k-browser-view` | - |
| `k-custom-view` | - |

- Removed `icon` prop from `k-card` and `k-list-item`. Pass data as part of the `image` prop instead to new (link: docs/reference/plugins/ui/item text: `k-item` component).
- If the `cover` option is not defined for a section, it is disabled by default.
- The `<k-box text="..." />` property is now rendered as plain text by default instead of as HTML code. For the previous behavior use `<k-box text="..." :html="true" />`.

### Helpers & libraries
- `vue-router` has been completely removed, use (link: docs/reference/plugins/extensions/panel-areas text: Panel areas) to define custom Panel routes
- Changes in the Vuex store and store modules
    - `content` module doesn't handle content locking information anymore. This in now provided directly to the model views.
    - `language` module has been removed, use `this.$language` and `this.$languages` instead.
    - `system` module has been removed, use `this.$system` instead.
    - `translation` module has been removed, use `this.$translation` instead.
    - `user` module has been removed, use `this.$user` instead.
    - `$store.dispatch('breadcrumb')` and `$store.dispatch('title')`have been removed. Use Panel areas instead.
- The `previewThumb` helper has been removed. `k-item-image` takes care of processing the image data correctly inside `k-item`.
- The following methods from `vuex-i18n` are no longer available in the new custom implementation: `$tc`,  `$tlang`, `$i18n.localeExists`, `$i18n.keyExists`. Translation strings cannot be added dynamically anymore, only through our (link: docs/reference/plugins/extensions/translations text: official extension).
- Removed outdated $api methods in Vue:
    - `$api.pages.breadcrumb`
    - `$api.files.breadcrumb`
    - `$api.users.breadcrumb`
    - `$api.site.breadcrumb`
    - `$api.site.options`
    - `$api.roles.options`
    - `$api.translations.options`


### CSS Selectors
- `.k-panel[data-translation]` is now `.k-panel[data-language]`.
- `.k-panel[data-translation-default]` is now `.k-panel[data-language-default]`.
- CSS class `.k-block-handle` has been replaced with `.k-sort-handle`.


## Core

- Kirby no longer supports PHP 7.3, which will reach its [end-of-life date](https://www.php.net/supported-versions.php) soon. We will add support for PHP 8.1 to Kirby as soon as possible after the official release of PHP 8.1.
- Multi-language setup: Slugs in content files of the default language will be ignored. The folder names decide the slugs for the default language.
- Hidden blocks in the layout field will no longer be visible (as expected).
- `$files->add()` and `$users->add()` now throw exceptions when something other than a `File`/`User` object, a `Files`/`Users` object or a file/user ID is passed to them. Empty values (`null`, `false` and `true`) are silently ignored. [#3248](https://github.com/getkirby/kirby/pull/3248)
- `F::modified()` does no longer calculate a maximum between mtime and ctime for file changes. This could in theory lead to different timestamps in some scenarios. Very unlikely though.
- `Html::encode()`: Single quotes now are also converted.
- `Kirby\Image\Image::__toString()` returns the HTML `<img>` tag instead of the root string.
- File hooks: the `$upload` parameter is now a `Kirby\Filesystem\File` object, before `Kirby\Image\Image`.
- The video embedding helpers and methods no longer throw exceptions if the provided URL is invalid, instead `null` is returned.
- `Kirby\Toolkit\File::header()` now returns `void` instead of an empty `string` by default.
- `F::niceSize()` doesn't check anymore whether the file exists.
- The public static configuration attributes of the `Sane` classes have been renamed for consistency with the new `Toolkit\Dom` class.
- The `Sane\Svg::$allowedNamespaces` attribute now expects namespace reference names as the array keys instead of full attribute names (so `xmlns:xlink` should become just `xlink` and `xmlns` should become an empty string).
- The `Sane\Svg::$allowedTags` attribute (before `$allowedElements`) now is an associative array with the allowed attributes for this tag as the value. Attributes defined in `$allowedAttrs` are allowed globally and don't need to be copied to each tag.
- All API endpoints for content locking/unlocking don't display an exception anymore when content locking isn't supported.
- The crop keyword is now always present in filenames for cropped files. All center cropped files need to be regenerated.
- `Cms\Collection::has()`: 1st parameter got renamed to `$key`
- `Cms\Collection::indexOf()`: 1st parameter got renamed to `$needle`
- `Cms\Collection::query()`: 1st parameter got renamed to `$arguments`
- Some argument and property types are now more specific and therefore stricter [#3282](https://github.com/getkirby/kirby/pull/3282), [#3241](https://github.com/getkirby/kirby/pull/3241)

### Deprecated code that has been removed with 3.6.0

| Removed | Use instead |
|-|-|
| `Kirby\Cms\Asset::alt()` | - |
| `Kirby\Cms\Page::sort()` | `Kirby\Cms\Page::changeSort()` |
| `Kirby\Cms\KirbyTags::$tagClass` | You cannot set the class for KirbyTag objects to be created via `KirbyTags::parse()` anymore. |
