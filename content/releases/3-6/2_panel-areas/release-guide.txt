Title: Panel Areas
----
Intro: Every section of the panel is a separated area with routes, optional menu item, icon, breadcrumb label, access permissions, etc.
----
Text:

## Default areas

The following "areas" are installed by default:

- account
- installation
- login
- settings
- site
- users

## Area definition

Areas are defined in a callback function that receives the `$kirby` instance and must return their configuration as an array

```php
return function (Kirby $kirby) {
	return [
		// icon for the menu and breadcrumb
	  'icon'  => 'home',

		// Label for the menu and the breadcrumb
    'label' => t('site'),

		// optional replacement for the breadcrumb label
		'breadcrumbLabel' => function () {
			return kirby()->site()->title()->or(t('site'))->value();
		},

		// show/hide from menu
    'menu'  => true,

		// the menu link
    'link'  => 'site',

		// routes for the area
		'routes' => [
			[
				// All panel patterns must not start with 'panel/'
				// The panel slug is automatically prepended.
				'pattern' => 'site',
				'action'  => function () {

					// app routes return a simple array
					// which will be injected into our Vue app
					// The array can control the loaded Vue component,
					// props for the component and settings for the current view
					// (like breadcrumb, title, active search type etc)
					return [

						// The Vue view component is stored in
						// panel/src/components/Views and will be loaded
						// by the Vue app. For plugins, it can also be
						// created manually in a plugin index.js
						'component' => 'k-site-view',

						// the breadcrumb can be just an array or a callback
						// function for more complex breadcrumb logic.
						'breadcrumb' => function () {
							// each item in the breadcrumb array
							// has a label and a link attribute
							return [
								[
									'label' => 'My page',
									'link'  => '/site/pages+mypage'
								]
							];
						},

						// props will be directly available in the
						// Vue component. It's a super convenient way
						// to send backend data to the Panel
						'props' => [
							...
						]

						// we can preset the search type with the
						// search attribute
						'search' => 'pages',
						'title' => 'My Page'

					];
				}
			]
		]
}
```

## Areas in plugins

Plugins can create their own Panel areas. Areas can be just a single view or really complex applications with multiple routes.

```php
Kirby::plugin('yourname/todos', [
	'areas' => [
		'todos' => [
			'label' => 'Todos',
			'icon'  => 'check',
			'menu' => true
			'link' => 'todos',
			'routes' => [
				[
					'pattern' => 'todos',
					'action'  => function () {
						return [
							'component' => 'k-todos-view',
							'title' => 'Todos',
							'props' => [
								'todos' => [...]
							]
						]
					}
				]
			]
		]
	]
])
```

```js
panel.plugin('yourname/todos', {
	components: {
		'k-todos-view': {
			props: {
				todos: Array
			},
			template: ...
		}
	}
})
```
