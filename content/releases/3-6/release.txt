Title: 3.6
----
Version: 3.6
----
Link: https://github.com/getkirby/kirby/releases/tag/3.6.0
----
Area:

```php
Kirby::plugin('yourname/todos', [
  'areas' => [
    'todos' => function () {
      return [
        'label' => 'Todos',
        'icon'  => 'check',
        'menu'  => true
        'dialogs' => [
          'todos/create' => [
            'load' => function () { ... },
            'submit' => function () { ... }
          ]
        ],
        'views' => [
          [
            'pattern' => 'todos',
            'action' => function () { ... }
          ]
        ]
      ];
    }
  ]
]);
```

----

FiberPHP:

```php "Panel view definition in PHP"
[
  'pattern' => 'todos',
  'action'  => function () {
    return [
      'component' => 'k-todo-view',
      'props' => [
        'title' => 'Todos',
        'todos' => [
          'Buy milk',
          'Try Kirby 3.6'
        ]
      ]
    ]
  }
]
```

----
FiberJS:

```html "View component in Vue.js"
<template>
  <k-header>{{ title }}</k-header>
  <ul>
    <li v-for="(todo, index) in todos" :key="index">
      {{ todo }}
    </li>
  </ul>
</template>

<script>
export default {
  props: {
    title: String,
    todos: Array
  }
}
</script>
```

----

Cards:

```yaml
sections:
  team:
    type: pages
    template: colleague
    layout: cards
```

----

Cardlets:

```yaml
sections:
  team:
    type: pages
    template: colleague
    layout: cardlets
```

----

List:

```yaml
sections:
  team:
    type: pages
    template: colleague
    layout: list
```

----

Webp:

```php
<picture>
  <source srcset="<?= $image->thumb(['format' => 'avif'])->url() ?>" type="image/avif">
  <source srcset="<?= $image->thumb(['format' => 'webp'])->url() ?>" type="image/webp">
  <img src="<?= $image->thumb(['format' => 'jpg'])->url() ?>" alt="A highly optimized image">
</picture>
```
----

ImageSettingsIntro:

- Support for Kirby's (link: docs/guide/blueprints/query-language text: query language)
- Custom colors: `back` and `color` options now support shorthands for (link: docs/reference/plugins/ui#colors text: core CSS colors) as well as HEX codes or other native CSS color properties (e.g. even gradients)
- Per blueprint: The `image` options for pages, files and users can now be defined directly in their own blueprint. You can still set image settings in sections the good old way if needed.

----

ImageSettings:

```yaml "site/blueprints/pages/note.yml"
image:
  color: "blue-200"
  back: "{{ page.myCustomBackColor }}"
  icon: 📝
```

----

Icons:

- audio
- crop
- display
- flag
- food
- grid
- grid-bottom
- grid-bottom-left
- grid-bottom-right
- grid-full
- grid-left
- grid-right
- grid-top
- grid-top-right
- grid-top-left
- h1
- h2
- h3
- h4
- h5
- h6
- heart-outline
- info
- images
- mobile
- order-alpha-asc
- order-alpha-desc
- order-num-asc
- order-num-desc
- paragraph
- paypal
- pin
- pipette
- play
- print
- qr-code
- server
- shuffle
- sitemap
- star-outline
- sun
- table
- tablet
- text-center
- text-justify
- text-left
- text-right
- tiktok

----

Fixes:

#### Core
- The `$field->replace()` method no longer returns the model ID for empty fields, instead an empty string is returned as expected. [#3652](https://github.com/getkirby/kirby/issues/3652)
- Changing template of a page on a multi-language setup no longer creates content files for untranslated languages [#3674](https://github.com/getkirby/kirby/issues/3674)
- `User::changeEmail()` and `System::register()` now convert the provided email address to lowercase for better reliability [#3307](https://github.com/getkirby/kirby/pull/3307)
- `Str::accepted` always a float as `quality` value (before default `1` as int, all actual quality values as string, e.g. `'0.7'`) [#3393](https://github.com/getkirby/kirby/pull/3393)
- `Str::pool()`: the passed `$type` parameter is now treated case-insensitively [#3393](https://github.com/getkirby/kirby/pull/3393)
- `Str::pool()` now also returns a string (if set via the second argument) if an array of types is passed as  first argument [#3393](https://github.com/getkirby/kirby/pull/3393)
- Fixed return type for `Kirby\Cms\App::translation()` in DocBlock [#3383](https://github.com/getkirby/kirby/pull/3383)
- Fixed `tc()` helper docblock and parameter typing [#3474](https://github.com/getkirby/kirby/issues/3474)
- Inconsistent return types between Query class insert method and shortcut `Db::$queries['insert']` have been fixed [#3140](https://github.com/getkirby/kirby/issues/3140)
- Changing the slug of a page with an irrelevant .lock file no longer causes PHP to completely hang [#2516](https://github.com/getkirby/kirby/issues/2516)
- Fix inner join queries [#2501](https://github.com/getkirby/kirby/issues/2501)
- Fixed unstable links / hashes for media files [#3646](https://github.com/getkirby/kirby/issues/3646)
- It's no longer possible to switch from draft to unlisted page if there are page errors [#3781](https://github.com/getkirby/kirby/issues/3781)
- Fixed filename collision for cropped image files [#3418](https://github.com/getkirby/kirby/issues/3418)
- Hidden blocks are no longer visible in layouts [#3857](https://github.com/getkirby/kirby/issues/3857)
- The `image/svg` MIME type is now recognized by the `Sane` classes


#### Panel
- The Panel now sets the correct default language in multi language projects: [#3647](https://github.com/getkirby/kirby/issues/3647)
- Changing the page title no longer causes errors with slug autocorrection (e.g. from underscores to dashes) if the user does not have permissions to change the slug
- Video block does now show domain-restricted clips in Panel [#3257](https://github.com/getkirby/kirby/issues/3257)
- Fixed manual files sorting via changePosition dialog [#3589](https://github.com/getkirby/kirby/issues/3589)
- `cover` option fixed for all models and list layout in section [#3226](https://github.com/getkirby/kirby/issues/3226)
- Fixed jump to the top of the page at ESC keydown in an overlay [#3387](https://github.com/getkirby/kirby/issues/3387)
- Extending a non-existing Vue component is ignored now instead throwing an console error and breaking the Panel
- Fixed blocks field sort handle on hover [#3538](https://github.com/getkirby/kirby/issues/3538)
- Fixed writer field RTL support [https://kirby.nolt.io/322](https://kirby.nolt.io/322)
- Fixed version number in settings view in RTL interface [#3581](https://github.com/getkirby/kirby/pull/3581)
- `this.$helper.upload` now correctly uses the method parameter
- Fixed writer field email title [#3630](https://github.com/getkirby/kirby/issues/3630)
- Fixed autofocus option for the blocks field [#3681](https://github.com/getkirby/kirby/pull/3681)
- `k-progress`: fixed not updating when value prop changed
- Fixed opening blocks that have no fields or no editable [#3686](https://github.com/getkirby/kirby/pull/3686)
- Fix overlay/dialogs/drawers on back navigation [#3704](https://github.com/getkirby/kirby/issues/3651)
- Login with invalid password now sends a 401 in debug mode [#2856](https://github.com/getkirby/kirby/issues/2856)
- Added fallbacks for deprecated CSS classes [#3706](https://github.com/getkirby/kirby/issues/3706)
- Confirming empty password dialog no longer throws error [#3716](https://github.com/getkirby/kirby/issues/3716)
- Support for multi-line tags [#3614](https://github.com/getkirby/kirby/issues/3614)
- Fixed saving nested structure fields without click OK button [#2550](https://github.com/getkirby/kirby/issues/2550)
- Top-level pages with a slug called `files` will no longer create havoc [#3187](https://github.com/getkirby/kirby/issues/3187)
- Fixed parsing logic for entire documents and breaks when pasting blocks [#3735](https://github.com/getkirby/kirby/issues/3735)
- The expired `DST Root CA X3` CA certificate (previously used for Let's Encrypt certificates) has been removed from the CA bundle to prevent "expired certificate" warnings when requesting remote resources (like in options API fields) on some server systems [#3765](https://github.com/getkirby/kirby/pull/3765)
- Fixed layout issue in the mobile version of the settings view [#3789](https://github.com/getkirby/kirby/pull/3789)
- Fixed multiline placeholder for writer field Multiline placeholder in writer field renders as single line [#3470](https://github.com/getkirby/kirby/issues/3470)
- Account files are now fully accessible through the account view, even if permissions for the users area is blocked [#2580](https://github.com/getkirby/kirby/issues/2580)
- Fixed nested blocks drawer breadcrumb issue [#3871](https://github.com/getkirby/kirby/issues/3871)
- Fix rotating loader in Firefox

----
Breaking:

Breaking changes in minor releases? 3.6 is not a minor release. We follow the pattern `{generation.major.minor.patch}`

`3.6.0.0` is the 6th major release for Kirby 3 and it's a really big and important step. We don't take breaking changes lightly but they sometimes have to happen in order to keep moving forward.

## Panel

### For all users

- New minimum **browser requirements** (browsers with native ESM and dynamic `import()` support):

    - Firefox 67+
    - Chrome 63+
    - Edge 79+
    - Opera 50+
    - macOS Safari 11.1+
    - Safari iOS 11+
    - Android Browser 92+
    - Chrome for Android 92+


- Several blueprint options that use the **(link: docs/guide/blueprints/query-language text: query syntax)** were updated to **escape against raw HTML** output that may lead to XSS attacks. HTML code directly in the blueprint option still works as normal. If queries need to return HTML, you can use the new `{< >}` syntax. In this case you need to ensure manually that the returned HTML code is safe. With the `{{ }}` syntax, Kirby performs the escaping for you.

```yaml
# works as normal
info: "This is <strong>{{ page.important }}</strong>"

# custom site method returns HTML, new `{< >}` syntax needed
info: "via {< site.myMethodWithHtml >}"
```

- Direct URLs for tabs have changed, e.g. now `/panel/site/?tab=yourTabName`
- Direct URLs for the users view have changed, e.g. now `/panel/users/?role=yourRole`


### Custom Panel views
- Using custom Panel views (incl. routing, breadcrumbs...) in plugins has changed fundamentally. You will have to use the (link: docs/reference/plugins/extensions/panel-areas text: new Panel areas extension) now.
- Accordingly, the frontend extension `panel.plugin({ view: [...] })` has been  removed. Use Panel areas instead.

### `Kirby\Panel` namespace related

- If you have modified the `->panel*()` in custom models, you now need to return a custom Panel model (based on `Kirby\Panel\Model`) at `$page->panel()` which then takes care of all Panel-related functions, e.g. if you had customized `$page->panelImage()` you need a custom `Kirby\Panel\Page` to then customize `$page->panel()->image()`.
- Use `$model->panel()->image()` instead of `$model->panel()->icon()`
- `$model->panel()->image()` doesn't return `cards` and `list` keys anymore. Instead, `src` and `srcset` keys at the top level that correspond to the new `$layout` parameter.

### Vue component changes

| Removed | Use instead |
|-|-|
| `k-app` | `k-inside` (authenticated) or `k-outside` (unauthenticated) |
| `k-cards` | `k-items`  with `layout: cards` |
| `k-card` | `k-item` with `layout: cards` |
| `k-list` | `k-items`  with `layout: list` |
| `k-list-item` | `k-item` with `layout: list` |
| `k-browser-view` | - |
| `k-custom-view` | - |

- Removed `icon` prop from `k-card` and `k-list-item`. Pass data as part of the `image` prop instead to new (link: docs/reference/plugins/ui/item text: `k-item` component).
- If the `cover` option is not defined for a section, it is disabled by default.
- The `<k-box text="..." />` property is now rendered as plain text by default instead of as HTML code. For the previous behavior use `<k-box text="..." :html="true" />`.

### Helpers & libraries
- `vue-router` has been completely removed, use (link: docs/reference/plugins/extensions/panel-areas text: Panel areas) to define custom Panel routes
- Changes in the Vuex store and store modules
    - `content` module doesn't handle content locking information anymore. This in now provided directly to the model views.
    - `language` module has been removed, use `this.$language` and `this.$languages` instead.
    - `system` module has been removed, use `this.$system` instead.
    - `translation` module has been removed, use `this.$translation` instead.
    - `user` module has been removed, use `this.$user` instead.
    - `$store.dispatch('breadcrumb')` and `$store.dispatch('title')`have been removed. Use Panel areas instead.
- The `previewThumb` helper has been removed. `k-item-image` takes care of processing the image data correctly inside `k-item`.
- The following methods from `vuex-i18n` are no longer available in the new custom implementation: `$tc`,  `$tlang`, `$i18n.localeExists`, `$i18n.keyExists`.     Translation strings cannot be added dynamically anymore, only through our official extension.
- Removed outdated $api methods in Vue:
    - `$api.pages.breadcrumb`
    - `$api.files.breadcrumb`
    - `$api.users.breadcrumb`
    - `$api.site.breadcrumb`
    - `$api.site.options`
    - `$api.roles.options`
    - `$api.translations.options`


### CSS Selectors
- `.k-panel[data-translation]` is now `.k-panel[data-language]`
- `.k-panel[data-translation-default]` is now `.k-panel[data-language-default]`
- CSS class `.k-block-handle` has been replaced with `.k-sort-handle`


## Core

- Kirby no longer supports PHP 7.3, which will reach its [end-of-life date](https://www.php.net/supported-versions.php) soon. We will add support for PHP 8.1 to Kirby as soon as possible after the official release of PHP 8.1.
- Multi-language setup: slugs in content files of the default language will be ignored. The folder names decide the slugs for the default language.
- Hidden blocks in the layout field will no longer be visible (as expected)
- `$files->add()` and `$users->add()` now throw exceptions when something other than a `File`/`User` object, a `Files`/`Users` object or a file/user ID is passed to them. Empty values (`null`, `false` and `true`) are silently ignored. [#3248](https://github.com/getkirby/kirby/pull/3248)
- `F::modified()` does no longer calculate a maximum between mtime and ctime for file changes. This could in theory lead to different timestamps in some scenarios. Very unlikely though.
- `Html::encode()`: Single quotes now are also converted
- `Kirby\Image\Image::__toString()` returns the HTML `<img>` tag instead of the root string
- File hooks: the `$upload` parameter is now a `Kirby\Filesystem\File` object, before `Kirby\Image\Image`
- The video embedding helpers and methods no longer throw exceptions if the provided URL is invalid, instead `null` is returned.
- `Kirby\Toolkit\File::header()` now returns `void` instead of an empty `string` by default
- `F::niceSize()` doesn't check anymore whether file exists
- The public static configuration attributes of the `Sane` classes have been renamed for consistency with the new `Toolkit\Dom` class
- The `Sane\Svg::$allowedNamespaces` attribute now expects namespace reference names as the array keys instead of full attribute names (so `xmlns:xlink` should become just `xlink` and `xmlns` should become an empty string)
- The `Sane\Svg::$allowedTags` attribute (before `$allowedElements`) now is an associative array with the allowed attributes for this tag as the value
- All API endpoints for content locking/unlocking don't display an exception anymore when content locking isn't supported.
- The crop keyword is now always present in filenames for cropped files. All center cropped files need to be regenerated.
- `Cms\Collection::has()`: 1st parameter got renamed to `$key`
- `Cms\Collection::indexOf()`: 1st parameter got renamed to `$needle`
- `Cms\Collection::query()`: 1st parameter got renamed to `$arguments`
- Some argument and property types are now more specific and therefore stricter [#3282](https://github.com/getkirby/kirby/pull/3282), [#3241](https://github.com/getkirby/kirby/pull/3241)

### Deprecated code that has been removed with 3.6.0

| Removed | Use instead |
|-|-|
| `Kirby\Cms\Asset::alt()` | - |
| `Kirby\Cms\Page::sort()` | `Kirby\Cms\Page::changeSort()` |
| `Kirby\Cms\KirbyTags::$tagClass` | You cannot set the class for KirbyTag objects to be created via `KirbyTags::parse()` anymore. |

----
Deprecated:

##### Removed methods

<warning>
The following methods have been marked as deprecated since Kirby 3.0.0 and are now removed.
</warning>

Removed | Use instead
- | -
`$file->meta()` | `$file->content()`
`$file->rename()` | `$file->changeName()`
`$languages->findDefault()` | `$languages->default()`
`$page->hasInvisibleChildren()` | `$page->hasUnlistedChildren()`
`$page->hasNextVisible()` | `$page->hasNextListed()`
`$page->hasNextInvisible()` | `$page->hasNextUnlisted()`
`$page->hasPrevInvisible()` | `$page->hasPrevUnlisted()`
`$page->hasPrevVisible()` | `$page->hasPrevListed()`
`$page->hasVisibleChildren()` | `$page->hasListedChildren()`
`$page->nextVisible()` | `$page->nextListed()`
`$page->nextInvisible()` | `$page->nextUnlisted()`
`$page->prevVisible()` | `$page->prevListed()`
`$page->prevInvisible()` | `$page->prevUnlisted()`
`$page->isInvisible()` | `$page->isUnlisted()`
`$page->isVisible()` | `$page->isListed()`
`$pages->invisible()` | `$pages->unlisted()`
`$pages->visible()` | `$pages->listed()`

##### Deprecated methods

<info>
Deprecated methods will be removed in a future version. Please update your code accordingly.
</info>

Deprecated | Use instead
- | -
`$page->sort()` | `$page->changeSort()`

----

Stats:

- 407 commits
- 104 closed issues and PRs
- Contributors (alphabetical order):
  - (link: https://github.com/afbora text: @afbora)
  - (link: https://github.com/bastianallgeier text: @bastianallgeier)
  - (link: https://github.com/distantnative text: @distantnative)
  - (link: https://github.com/lukasbestle text: @lukasbestle)
  - (link: https://github.com/neildaniels text: @neildaniels)
  - (link: https://github.com/pedroborges text: @pedroborges)

----

Thanks:

A huge thank-you to Tim Ötting for creating and maintaining the fabulous Builder plugin. Tim agreed that we could use his plugin as inspiration for our new Blocks field as a replacement for his great plugin. Your work really means a lot to us, Tim!

Thank you to all the contributors who helped with pull requests, translations and tests for this release. Without you, it wouldn't be possible.

Thank you to our amazing community for your ongoing support. Without all your feedback, patience and passion, Kirby wouldn't be where it is today! 💛

