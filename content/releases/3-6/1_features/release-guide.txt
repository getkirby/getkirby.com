Title: Features

----

Intro: Kirby 3.6 introdues and paves the way for many new highly-requested features, all on top of a groundbreaking overhaul of our Panel architecture.

----

Text:

## Panel

### Even more visual

- **Cardlets**: While lists are great for dense information and cards are fantastic if you want to highlight visual content, there's often a gray zone in between. The new `cardlets` layout option gives you nice visual previews while your text content is still representend decently. Use them in (link: docs/reference/panel/sections/pages#__cardlets-layout text: pages) or (link: docs/reference/panel/sections/files#__cardlets-layout text: files) sections as well as (link: docs/reference/panel/fields/pages text: pages), (link: docs/reference/panel/fields/files text: files) or (link: docs/reference/panel/fields/users text: users) fields.

(image: cardlets.png)

- **Image options on steriods:**
  - Support for (link: docs/guide/blueprints/query-language text: query language)
  - Custom colors: `back`¬†and¬†`color`¬†options now support shorthands for (link: docs/reference/plugins/ui#colors text: core CSS colors) as well as HEX codes or other native CSS color properties (e.g. even gradients)
  - Per blueprint: The `image` options for pages, files and users can now be defined directly in their own blueprint. You can still set image settings in sections the good old way if needed.


```yaml "site/blueprints/pages/note.yml"
image:
  color: "blue-200"
  back: "{{ page.myCustomBackColor }}"
  icon: üìù
```


- **(link: docs/reference/panel/icons text: New icons)** by popular demand

(columns‚Ä¶)

<div class="table">
<table>
<thead><th>Icon</th><th>Name</th></thead>
<tr><td>(icon: audio)</td><td>audio</td></tr>
<tr><td>(icon: crop)</td><td>crop</td></tr>
<tr><td>(icon: display)</td><td>display</td></tr>
<tr><td>(icon: flag)</td><td>flag</td></tr>
<tr><td>(icon: food)</td><td>food</td></tr>
<tr><td>(icon: grid)</td><td>grid</td></tr>
<tr><td>(icon: grid-bottom)</td><td>grid-bottom</td></tr>
<tr><td>(icon: grid-bottom-left)</td><td>grid-bottom-left</td></tr>
<tr><td>(icon: grid-bottom-right)</td><td>grid-bottom-right</td></tr>
<tr><td>(icon: grid-full)</td><td>grid-full</td></tr>
<tr><td>(icon: grid-left)</td><td>grid-left</td></tr>
<tr><td>(icon: grid-right)</td><td>grid-right</td></tr>
<tr><td>(icon: grid-top)</td><td>grid-top</td></tr>
<tr><td>(icon: grid-top-right)</td><td>grid-top-right</td></tr>
<tr><td>(icon: grid-top-left)</td><td>grid-top-left</td></tr>
<tr><td>(icon: h1)</td><td>h1</td></tr>
<tr><td>(icon: h2)</td><td>h2</td></tr>
<tr><td>(icon: h3)</td><td>h3</td></tr>
<tr><td>(icon: h4)</td><td>h4</td></tr>
<tr><td>(icon: h5)</td><td>h5</td></tr>
<tr><td>(icon: h6)</td><td>h6</td></tr>
<tr><td>(icon: heart-outline)</td><td>heart-outline</td></tr>
<tr><td>(icon: info)</td><td>info</td></tr>
<tr><td>(icon: images)</td><td>images</td></tr>
</table>
</div>

++++

<div class="table">
<table>
<thead><th>Icon</th><th>Name</th></thead>
<tr><td>(icon: mobile)</td><td>mobile</td></tr>
<tr><td>(icon: order-alpha-asc)</td><td>order-alpha-asc</td></tr>
<tr><td>(icon: order-alpha-desc)</td><td>order-alpha-desc</td></tr>
<tr><td>(icon: order-num-asc)</td><td>order-num-asc</td></tr>
<tr><td>(icon: order-num-desc)</td><td>order-num-desc</td></tr>
<tr><td>(icon: paragraph)</td><td>paragraph</td></tr>
<tr><td>(icon: paypal)</td><td>paypal</td></tr>
<tr><td>(icon: pin)</td><td>pin</td></tr>
<tr><td>(icon: pipette)</td><td>pipette</td></tr>
<tr><td>(icon: play)</td><td>play</td></tr>
<tr><td>(icon: print)</td><td>print</td></tr>
<tr><td>(icon: qr-code)</td><td>qr-code</td></tr>
<tr><td>(icon: server)</td><td>server</td></tr>
<tr><td>(icon: shuffle)</td><td>shuffle</td></tr>
<tr><td>(icon: sitemap)</td><td>sitemap</td></tr>
<tr><td>(icon: star-outline)</td><td>star-outline</td></tr>
<tr><td>(icon: sun)</td><td>sun</td></tr>
<tr><td>(icon: table)</td><td>table</td></tr>
<tr><td>(icon: tablet)</td><td>tablet</td></tr>
<tr><td>(icon: text-center)</td><td>text-center</td></tr>
<tr><td>(icon: text-justify)</td><td>text-justify</td></tr>
<tr><td>(icon: text-left)</td><td>text-left</td></tr>
<tr><td>(icon: text-right)</td><td>text-right</td></tr>
<tr><td>(icon: tiktok)</td><td>tiktok</td></tr>
</table>
</div>

(‚Ä¶columns)


- Set your **(link: docs/reference/system/options/panel#custom-panel-favicon text: own favicon(s)) for the Panel** ‚Äì the last step to a full white-label solution


### Blocks and layouts

- **Copy & paste:** It's finally here! You can now copy and paste blocks between block fields and even create blocks from pasted HTML and text.

(image: blocks-copy-and-paste.png)

To copy multiple blocks, you can `cmd+click` or `alt+click` on all blocks you want to include in your selection and copy them with `cmd+c` or via the copy button afterwards.

- **New (link: docs/reference/panel/blocks/line text: line block)** which automatically supports and imports hr blocks from the old Editor plugin.
(image: line-block.png)


### Improved UX

- **New slug field:** perfect for when you want to create sanitized strings for IDs, URL paths, css class names, etc. (link: https://getkirby.test/docs/reference/panel/fields/slug text: Learn more ‚Ä∫)

- **Improved duplicate dialog** which now also accepts a title for the new page
(image: duplicate-dialog.png)

- **`navigation` option:** The previous/next item navigation in the Panel is a very effective way for editors to move between content. We've drastically improved the usability of the navigation for your users (link: docs/reference/panel/blueprints/page#navigation-option text: with additional options) to customize the links.

- **`home` option for users:** When a user logs in to the Panel, they normally get redirected to the last view they've been on before they've been logged out or the Site view. When you work with permissions, you might want to block the Site view or redirect the user to a completely different view instead. This is now possible with the (link: docs/reference/panel/blueprints/user#home-option text: new `home` option for user blueprints).

- **New formats for the writer field:** Our writer field is getting more powerful with headings and lists. (link: docs/reference/panel/fields/writer#format-node-options text: Learn more ‚Ä∫)
(image: writer-formats.png)

- **Email dialog** for the writer field:
(image: writer-email-button.png)
(image: writer-email-dialog.png)

### New Panel views

Settings view has been replaced by a **new system view** with all kinds of additional information about your Kirby installation and a brand **new languages view**.

(image: language-view.png)

The system view contains the version and license information from the previous settings view. But now it also features additional health information about your setup, which will be extended step by step in later releases. It also contains a list of your installed plugins.

(image: system-view.png)

Both new views come with corresponding (link: permissions#role-based-permissions-in-user-blueprints text: access permissions).



## Core

### Image formats

- **WebP & AVIF support:** With increasingly better browser support for WebP and AVIF on the horizon, optimizing images becomes a lot easier. Our image processing engine now supports both formats. (link: docs/guide/templates/resize-images-on-the-fly#image-formats text: Learn more ‚Ä∫)

```php
<?= $image->thumb(['width' => 200, 'format' => 'webp']) ?>
<?= $image->thumb(['width' => 200, 'format' => 'avif']) ?>
```

- Set a (link: docs/reference/system/options/thumbs#format text: default thumb format) in your config

### More powerful config options

- **(link: docs/reference/system/options/kirbytext text: Global KirbyText options)** that allow you to provide default values for all KirbyTag attributes in your config.
- Define (link: docs/reference/plugins/extensions/blueprints#callback-definition text: **dynamic blueprints** as callback functions).

### Security

- (method: Kirby\Toolkit\Str::safeTemplate text: Str::safeTemplate($string, $data)) which escapes HTML from all regular query placeholders and allows HTML with new¬†`{< site.myMethodWithHtml >}`¬†syntax. Safe templates are now also available for `Page`, `User`, `File` and `Site` classes with the new `$model->toSafeString()`¬†method.
- New¬†`Kirby\Toolkit\Dom`¬†class to parse, modify and sanitize DOM-based documents (XML and HTML)
- New¬†`Kirby\Sane\Html`¬†for validating and sanitizing HTML files or HTML snippets
- (method: Kirby\Filesystem\File::sha1 text: $file->sha1()) which generates a sha1 hash for the given file.

### Sparkles

- New (method: Kirby\Cms\Blocks::hasType text: $blocks->hasType()), (method: Kirby\Cms\Layouts::toBlocks text: $layouts->toBlocks()) and (method: Kirby\Cms\Layouts::hasBlockType text: $layouts->hasBlockType()) class methods
- (method: Kirby\Toolkit\A::map text: A::map($array, $callback)) a simple wrapper around `array_map` to fix the weird, inconsistent argument order.
- New (method: Helper::router text: router()) helper
- (method: Kirby\Cms\System::title()) which we now use for all emails to replace "Kirby Panel" as generic title.
- (method: Kirby\Cms\Files::size text: $files->size()) and (method: Kirby\Cms\Files::niceSize text: $files->niceSize()) to get the total size of all files in a collection.



## Extending Kirby

### Fiber - a whole new way of Panel extensions

We‚Äôve spent the last months working on a brand new backend architecture for the Panel. Moving away from a single page application to a more traditional approach with a simplified server-rendered backend. The new architecture is inspired by Inertia.js and simplifies our Panel and Panel plugins in ways that we‚Äôve never dreamed of. (link: releases/3.6/refactoring#fiber text: Learn more about Fiber ‚Ä∫).

- New (link: docs/reference/plugins/extensions/panel-areas text: Panel areas) extension
- New (link: docs/reference/plugins/extensions/panel-dialogs text: Panel dialogs) extension
- New (link: docs/reference/plugins/extensions/panel-dropdowns text: Panel dropdown) extension
- New (link: docs/reference/plugins/extensions/panel-search text: Panel search) extension

### Supercharge blocks & layouts

- New custom (link: docs/reference/plugins/extensions/block-methods text: block methods) extensions
- New custom (link: docs/reference/plugins/extensions/blocks-methods text: blocks methods) extensions
- New custom (link: docs/reference/plugins/extensions/layout-methods text: layout methods) extensions
- New custom (link: docs/reference/plugins/extensions/layouts-methods text: layouts methods) extensions
- New custom (link: docs/reference/plugins/extensions/layout-columns-methods text: layout columns methods) extensions
- New (link: docs/reference/plugins/extensions/block-models text: block models) extensions

### Craft your own things for the Panel

- **(link: docs/reference/plugins/ui#css-properties text: Custom CSS properties)** can now be used throughout the Panel and in every plugin. Or you overwrite our default properties in your (link: docs/reference/system/options/panel#custom-panel-css text: custom panel.css).
- More **(link: docs/reference/panel/styling#css-selectors text: CSS selectors)** to customize the Panel styling
- New components:
  - (link: docs/reference/plugins/ui/items text: `k-items`), (link: docs/reference/plugins/ui/item text: `k-item`) and (link: docs/reference/plugins/ui/item-image text: `k-item-image`)
  - (link: docs/reference/plugins/ui/options-dropdown text: `k-options-dropdown`)
  - (link: docs/reference/plugins/ui/panel text: `k-panel`) as general wrapper and (link: docs/reference/plugins/ui/inside text: `k-inside`) as wrapper for views that want to feature the Panel topbar
- Improved documentation for (link: docs/reference/plugins/ui text: UI kit components)
- Improved documentation for (link: docs/reference/plugins/internals text: Panel internals) such as helpers and store

### More‚Ä¶
- New **(link: docs/reference/plugins/extensions/file-types text: custom file types)** extension
- **Custom email provider** via new (link: docs/reference/plugins/components/email text: email core component)