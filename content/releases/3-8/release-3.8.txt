title: Kirby 3.8
----
Subtitle: Rhampholeon
----
Version: 3.8
----
Link: https://github.com/getkirby/kirby/releases/tag/3.8.0
----
Features:

#### **Unique IDs** for pages, files, users and site #4612
- Get one: `$page->uuid()`, `$file->uuid()` ...
- Format: `page://OPJmmoAT1gGocMW`
- All methods that look up an ID/path now also support looking up UUIDs
- UUIDs are stored as `uuid` field in content files and lazily cached in `cache.uuid` for more performant lookup
- Support for structure entries and blocks will follow in a future release
- Picker fields have a new `store` blueprint option (`uuid` or `id` as value, `uuid` default) to configure how to store the value in the content file

#### **Permanent URLs** for pages and files with UUIDs #4612
- New `$page->permalink()` and `$file->permalink()` methods
```
https://site.com/@/page/OPJmmoAT1gGocMW
```

**And more …**
- New `$users->files()` method (returning a collection of all files of the users) #4499
- Support for a new `site/config/env.php` file for options that are specific to a deployment: It can override all options from `config.php` and from the config files specific to hostname and server IP address. It can also override the `url` option and control which hostname-specific files will be loaded. #4580
- New `$cache->getOrSet($key, $callback, $minutes)` method: Retrieves the value from cache if possible, if not via callback function and adds it to the cache #4627
- New `$cache->enabled()` method to check if the cache is ready to store values beyond the current request #4661

----
Enhancements:

#### Better error messages for blocks and layout fields [Nolt/313](https://kirby.nolt.io/313)
![image](https://user-images.githubusercontent.com/3788865/191568958-d316fe04-914d-475b-b4b4-a29051dba721.png)

#### The error dialog now displays multiple error lines per field #4629
![image](https://user-images.githubusercontent.com/3788865/191569050-689c96df-9581-4f94-9a22-a5515219ab86.png)

#### System view: display "-" for empty plugin table cells #4444
![image](https://user-images.githubusercontent.com/3788865/191569109-bc19cc82-2026-4f90-a701-b246c07d9af5.png)

#### Easily translate options via an i18n key #3955
```yaml
# via `*` pseudo locale
options:
    a:
        *: my.i18n.key.a
    b:
        *: my.i18n.key.b
```

**And more …**
- When a login challenge has expired, the user is redirected to the login page. #4087
- Added new `onFormInput` handler of the structure field on form submit event #4616
- Each report in a `k-stats` widget can now define a `dialog` prop with the name of a dialog to be opened when the report is clicked. #4658
- Fiber dialogs: the submit button is now disabled while processing a submit request to prevent sending multiple requests at once accidentally #4413
- The `$field->replace()`, `$modelWithContent->toString()`, `$modelWithContent->toSafeString()` and `Str::safeTemplate()` methods now support the fallback value `null` (which leaves invalid tokens in the output string). #4671
- Table rows use same outline styling when dragged as cards and lists #4682

----
Fixes:

**Panel**
- Tags field: Separates tags on blur correctly #4638
- Tags field: Loesn't lose current input when hitting Cmd+S #4590
- Picker fields: Fixed styling for disabled/non-translatable state #4306
- Structure field: `columns` options now rightly overrule implied options from the field #4514
- URL field preview is properly truncated with an ellipsis when it is too long #4677
- Users view: The role filter is not shown anymore if there is only one role available
- The template of the home page can be changed now #4571
- Items are properly highlighted while being dragged #4648
- The table layout heading alignment is now working properly #4630
- Uploaded XML files are no longer blocked because they contain links to external domains #4553
- The Panel now suppresses error dialog when redirecting to logout #4614
- We brought back the default slot for `k-items` #4635

**Core**
- Calling a `$file` method inside a custom `file::url` component no longer causes an infinite loop #4274
- `Str::except()` does not add superfluous space after stripped tag and before interpunctuation #4645
- Fixed calling `A::average()` with empty array #4269
- Site search with parameters now returns correct results #4641
- Caching is no longer disabled when the request passes an empty `Authorization` header. #4634
- Calling `$app->user()` no longer sets the response flag for "uses auth header" unless the `api.basicAuth` option is enabled.
- Various escaping issues for fields with options #4043 #4229
- `A::append()` has been fixed for non-associative arrays. It is now an alias for `A::merge()` with the `A::MERGE_APPEND` flag. #4345
- Language routes that return a falsy value are only called once now #4305
- `$translation->exists()` now works for virtual pages #4674
- Database queries can now filter by `'AND'` and `'OR'` as actual values (via `->where()`, `->andWhere()` and `->orWhere()`) #4668

----
Breaking:

- Kirby 3.8.0 requires a minimum of PHP 8.0.
- `uuid` cannot be used as field name or custom method for any page, file, user or site anymore
- `permalink` cannot be for custom method names for any page or file and content fields with the same name can only be accessed via `$model->content()->get('permalink')`
- The first-level URL path `@` is now blocked
- Panel drag texts now use UUIDs (Kirbytext) or permalinks (Markdown) for absolute references
- Kirby's upload sanitizer no longer checks XML files for external links because they can be pretty common in many XML-based formats; if you want to keep the strict behavior, set `Kirby\Sane\Xml::$allowedDomains = []`, set this property to a custom allowlist or write a custom Sane handler for your XML-based format #4553
- Kirby now automatically loads the `site/config/env.php` file; if you already use this file path for a different purpose, please rename the file to a different name #4580
- `A::average()` returns `null` when passed an empty array #4649
- Multiselect field does not display option value as info #4624
- The default token fallback in `Str::safeTemplate()` changed from an empty string to `null` (which leaves invalid tokens in the output string). This behavior is consistent with `Str::template()`.
- `$translation->exists()` now returns true for translations without an actual content file but where an content array has been provided
- The deprecated `master` branch of the Kirby repository was deleted. If you install Kirby via Git, e.g. as a submodule, please use the `main` branch instead.
- Database queries: subsequent `->where()` clauses don't support passing the mode (`AND`|`OR`) as last parameter anymore, but will interpret these as actual values to filter against. `->andWhere()` or `->orWhere()` instead. #4668

**Removed deprecated code #4478 #4515**

Removed `dump` component. Disable `dump()` via `KIRBY_HELPER_DUMP` instead and create your own function.

**Removed PHP methods**

| Removed | Use instead |
| --- | --- |
| `$file->dragText()` | `$file->panel()->dragText()` |
| `$file->panelIcon()` | `$file->panel()->icon()` |
| `$file->panelImage()` | `$file->panel()->image()` |
| `$file->panelOptions()` | `$file->panel()->options()` |
| `$file->panelPath()` | `$file->panel()->path()` |
| `$file->panelUrl()` | `$file->panel()->url()` |
| `$file->pickerData()` | `$file->panel()->pickerData()` |
| `$files->findById()` | `$files->find()` |
| `$page->dragText()` | `$page->panel()->dragText()` |
| `$page->panelIcon()` | `$page->panel()->icon()` |
| `$page->panelId()` | `$page->panel()->id()` |
| `$page->panelImage()` | `$page->panel()->image()` |
| `$page->panelOptions()` | `$page->panel()->options()` |
| `$page->panelPath()` | `$page->panel()->path()` |
| `$page->panelUrl()` | `$page->panel()->url()` |
| `$page->pickerData()` | `$page->panel()->pickerData()` |
| `$pages->findById()` | `$pages->find()` |
| `$pages->findByIdRecursive()` | `$pages->find()` |
| `$pages->findByUri()` | `$pages->find()` |
| `$site->panelIcon()` | `$site->panel()->icon()` |
| `$site->panelImage()` | `$site->panel()->image()` |
| `$site->panelOptions()` | `$site->panel()->options()` |
| `$site->panelPath()` | `$site->panel()->path()` |
| `$site->panelUrl()` | `$site->panel()->url()` |
| `$site->pickerData()` | `$site->panel()->pickerData()` |
| `$user->panelIcon()` | `$user->panel()->icon()` |
| `$user->panelImage()` | `$user->panel()->image()` |
| `$user->panelOptions()` | `$user->panel()->options()` |
| `$user->panelPath()` | `$user->panel()->path()` |
| `$user->panelUrl()` | `$user->panel()->url()` |
| `$user->pickerData()` | `$user->panel()->pickerData()` |
| `Kirby\Panel\Document::customCss()` | `Kirby\Panel\Document::customAsset('panel.css')` |
| `Kirby\Panel\Document::customJs()` | `Kirby\Panel\Document::customAsset('panel.js')` |
| `Kirby\Toolkit\Str::isUrl()` | `Kirby\Toolkit\V::url()` |

** Changed PHP methods**

| Method | Change | Use instead |
| ---- | ---- | ---- |
| `markdown` component  | Removed `$inline` parameter | `$options['inline']` |
| `$kirby->kirbytext()` | Removed `$inline` parameter | `$options['markdown']['inline']` |
| `$kirby->markdown()` | Passing a boolean as second parameter isn't supported anymore. | `$options['inline']` |


**Classes**

| Removed | Use instead |
| --- | --- |
| `Kirby\Cms\Server` | `Kirby\Cms\Environment` |

**Class Aliases**

| Removed |
| --- |
| `Server` |

**API**

| Removed
| --- |
| `page.next` |
| `page.prev` |

----
Refactoring:

- Optimized code base to take advantage of PHP 8
- Using PHP `match` statements instead of `switch` in various places #4452
- Using `|null` for nullable type hints #4453
- Using PHP's new null safe operator #4455
- `Toolkit\A`: Improve type hinting #4495
- Removed unused variables from PHP `catch` statements #4457
- Support for default caches (via `Core::caches()`) #4535
- Use PHP's `instanceof` instead of `is_a()` #4609
- Custom login views no longer need to display errors themselves with `k-login-alert`, instead they can `this.$emit("error", error)` #4577
- Updated npm dependencies #4639
- The properties for the system view are now combined in the backend for easier extension and testing #4658
- Adds a new `Option` namespace with refactored options classes
- Adds several related classes as back port from 3.9 (e.g. in `Blueprint`, `Field`...) - test coverage deactivated until 3.9 for these
- New blueprint syntax for options (with polyfills for the old syntax):

```yaml
# manual options
# shorthand
options:
  - a
  - b
  - c

# long form
options:
  type: array
  options:
    - a
    - b
    - c

# api
options:
  type: api
  url: https://api.getkirby.com
  query: Companies

# query
options:
  type: query
  query: site.contactoptions.toStructure
  text: "{< item.nameWithHtml >}"
  value: "{{ item.twitter }}"
```

- `Database\Query`: New third parameter `$mode` for `filterQuery()`  #4564

----
Deprecated:

- `$kirby->impersonate($user, $callback)`: the `$callback` will not be bound anymore to the `$kirby` instance in Kirby 3.9.0, `$this` inside the callback will refer to the current context and not `$kirby` instead. Using `$this` as `$kirby` inside the callback will throw a deprecation warning in debug mode. #4498
- Blueprints: `headline` option for sections will be removed in a future Kirby version. Use `label` instead. #4515
- `$kirby->server()` has been deprecated and will be removed in Kirby 3.9.0. Use `$kirby->environment()` instead. #4515
- `Kirby\Form\Options`, `Kirby\Form\OptionsApi`, `Kirby\Form\OptionsQuery` have been deprecated and will be removed in Kirby 3.9

----

UpdatesConfig:

```php
<?php

// global configuration
return [
  'updates' => true | 'security' | false
];

// separate configuration for Kirby and plugins
return [
  'updates.kirby'   => true | 'security' | false,
  'updates.plugins' => true | false,
];

// or even configuration by plugin
return [
  'updates.plugins' => [
    '*'                      => true | false,
    'superwoman/*'           => true | false,
    'superwoman/superplugin' => true | false
  ]
];
```

----

ObjectFieldConfig:

```yaml "/site/blueprints/contact.yml"
person:
  label: Person
  type: object
  fields:
    name:
      type: text
    phone:
      type: tel
    url:
      type: url
    tags:
      type: tags
```

----

ObjectFieldTemplate:

```php "/site/templates/contact.php"
<?php $person = $page->person()->toObject(); ?>
<dl>
  <dt>Name</dt>
  <dd><?= $person->name() ?></dd>
  <dt>Phone</dt>
  <dd><?= $person->phone() ?></dd>
  <dt>URL</dt>
  <dd><?= $person->url() ?></dd>
  <dt>Tags</dt>
  <dd><?= $person->tags() ?></dd>
</dl>
```
