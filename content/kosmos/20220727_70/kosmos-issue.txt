Title: Kosmos Episode 70

----

Date: 27.07.2022

----

Tags:

----

Comments: off

----

Kosmos-Subscription: on

----


Text:

This is our last newsletter before the summer holidays here in Europe
slow everything down. But while we will all take a well deserved break,
planning for the coming weeks and months and work behind the scenes will
continue.

We are already working on the next major release, 3.8, which will come
with a looong awaited feature (if you are curious, check out our GitHub
repo). But in the meantime, there were small issues to fix and features
to add that didn't make it in time for 3.7.0, so last week we released:


## Kirby 3.7.1 & today here is Kirby 3.7.2

The probably most notable change in [Kirby 3.7.1](https://github.com/getkirby/kirby/releases/tag/3.7.1) is something that is not obvious unless you look at the source code. After all these years, we finally [replaced spaces with tabs](https://discord.com/channels/525634039965679616/525634039965679618/992167548596523158), which not only makes the code much more accessible for braille users, but also has a nice weightloss effect on our code.

As for features, a favorite is that you can now create anonymous Panel-only plugins without an `index.php`. For more, check out the changelog.

[Kirby 3.7.2](https://github.com/getkirby/kirby/releases/tag/3.7.2) follows today as a maintenance release with a few important fixes.


## Extended security support

We have another great news for you: We will provide free security updates even for older major versions of Kirby.

This allows you and your clients to safely stay on a major version for two years after the next major version was released. In case of a vulnerability, there will be separate updates for each supported major version, so you can easily fix your installation without having to worry about breaking changes.

Kirby 3.5 will have security support until November 15, 2023, Kirby 3.6
until June 26, 2024 and Kirby 3.7 is of course actively supported and
will have security support for two more years when Kirby 3.8 gets
released.

You can always find the current support status in our [security policy](https://getkirby.com/security#supported-versions).


## Kirby in the wild

(image: naturally-made.jpeg)
[Nutramaxx Food GmbH](https://naturallymade.com)


## Kirby plugins


Johann Schopplich shares his best practice solution to build a Nuxt 3 based frontend on top of Kirby in headless mode: [Kirby's Starterkit ported to Nuxt 3 and KirbyQL](https://nuxt-kql.jhnn.dev/).

Integrate an Instagram feed into your website with the [Kirby Instagram
Feed plugin](https://clicktonext.com/plugins/instagram-feed).


## Cookbook & docs

Kirby 3.7 brought a subtle update of the Panel design with slightly rounded corners. If you prefer the former edgy look, here's [how to get rid of those rounded corners with 4 lines of CSS](https://getkirby.com/docs/quicktips/rounded-corners).

You said it's hard to find that Kirby has a page builder. We listened, and here is our [intro guide to the blocks and layout fields](https://getkirby.com/docs/guide/page-builder) to find your way around.


## PHP

New to PHP? The freeCodeCamp [PHP Handbook](https://www.freecodecamp.org/news/the-php-handbook/) introduces you to all you need to know to get started.

[Why TypeScript and PHP Are Good Friends](https://medium.com/geekculture/why-typescript-and-php-are-good-friends-964360fb75f6) explores the similarities between these two programming languages and might make it easier to learn the other if you already master one of them.

A very short video about the [evolution of PHP from 5.6 to 8.2](https://youtu.be/x9bSUo6TGgY) and how it helps us to write cleaner, better code.

## HTML

To improve the accessibility of an HTML document, a proper document structure is important. To make sure that your heading structure is correct, there is a plethora of tools to help you, some of which you can find listed in [Level up your headings game](https://matthiasott.com/notes/level-up-your-headings-game).

[The aspect ratio CSS property and the width & height attributes](https://jakearchibald.com/2022/img-aspect-ratio/) are two ways to indicate an image's aspect ratio to the browser and thus prevent layout shifts. But when to use which approach?


## JavaScript

[Bun](https://bun.sh) is a new JavaScript runtime with a native bundler,transpiler, task runner and npm client builtin.

As a web developer, the ability to manipulate the DOM is an important skill. If you are new to this field and want to gain a better understanding, here is [the DOM explained in plain English](https://www.freecodecamp.org/news/what-is-the-dom-explained-in-plain-english/).

The [AbortController](https://whistlr.info/2022/abortcontroller-is-your-friend) is a new JavaScript feature that allows you to abort one or more Web requests as required.


## This & that

[Evaluatory](https://darekkay.com/evaluatory/) is an opensource website validation tool which checks your website for accessibility and markup issues. It returns a visual HTML results page with page screenshots.

Today, when we talk about REST or RESTful APIs, most of us have come to understand a JSON API. However, as the insightful article [How Did REST Come To Mean The Opposite of REST?](https://htmx.org/essays/how-did-rest-come-to-mean-the-opposite-of-rest/) explains, all of today's JSON APIs are failing at incorporating the hypermedia controls required for true REST.

Got a lot of `.csv` data and want to quickly perform some queries? Then why not [convert your files to SQLite](https://www.jvt.me/posts/2021/11/08/sqlite-csv/) on the fly using the command line.

When your client doesn't see the changes you made to their website, it's very likely that [browser or edge caching](https://dodov.dev/blog/browser-cache-and-edge-cache-explained) is involved.

The DRY principle is an important programming principles that every developer learns almost from day one. In an article provocatively titled [Why DRY is the most overrated programming principle](https://gordonc.bearblog.dev/dry-most-over-rated-programming-principle), Gordon Cassie challenges this basic maxim and follows up on the unavoidable reactions in a [second blog post](https://gordonc.bearblog.dev/more-dry-talk-responding-to/).

[How do database indexes work](https://planetscale.com/blog/how-do-database-indexes-work)? We all know that indexes speed up our database queries. But do you know how that works under the hood?
