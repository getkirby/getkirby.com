Title: Date/time fields
----
Intro: We've completely revamped our date and time fields to be more usable and adjustable

----
Text:

(screenshot: date.png)

Gone are the days of a date field with three select inputs with a fixed order. The new fields consist of a single text input with some sugar on tops. Which allows for a range of new possibilities - such as custom display orders and formats - but also provides a much better interaction with e.g. copying and pasting dates/times between fields.

## Display in your preferred format

The fields now support a new `display` option which defines how the date is displayed in the Panel. Offering a range of options:

```yaml
# default
display: YYYY-MM-DD

# For ze GermÃ¤ns
display: DD.MM.YYYY

# The Brits
display: MM/DD/YYYY
```

The following tokens are supported:

| Token | Output | Description |
|--|--|--|
| `YY` | 18 | Two-digit year
| `YYYY` | 2018 | Four-digit year
| `M` | 1-12 | Month
| `MM` | 01-12 | Month, 2-digits
| `MMM` | Jan-Dec | Abbreviated month name
| `MMMM` | January-December | Full month name
| `D` | 1-31 | Day of the month
| `DD` | 01-31 | Day of the month, 2-digits
| `H` | 0-23 | Hour
| `HH` | 00-23 | Hour, 2-digits
| `h` | 1-12 | Hour, 12-hour clock
| `hh` | 01-12 | Hour, 12-hour clock, 2-digits
| `m` | 0-59 | Minute
| `mm` | 00-59 | Minute, 2-digits
| `s` | 0-59 | Second
| `ss` | 00-59 | Second, 2-digits
| `A` | AM PM	| |
| `a` | am pm | |

## Parsing your input

Since the field now offers free input, we need to parse that input and turn it into a valid date. To be smart and resourceful about this (instead of bundling huge natural language libraries), the field makes the assumption that the input can be expected to follow some style of the chosen display format. What does this mean? Let's start with the following format

```yaml
display: DD.MM.YYYY
```

The field expects any input to match this format as well and converts it to a valid date internally. 

```yaml
# input -> converted
29.01.1989 -> 29.01.1989
```

If only a part of the full format is provided, the field matches it with the current date:

```yaml
# if today is 1 Dec 2020
03. -> 03.12.2020
03.04. -> 05.04.2020
03.04.2015 -> 03.04.2015
```

The field also tries to be less strict about it and will try to match input even with different interpunctation or variations:

```yaml
29.01.1989 -> 29.01.1989
29/01/1989 -> 29.01.1989
29.1.89 -> 29.01.1989
```

## Storing in content file

The fields now store their value in a standardized format: `Y-m-d` for only dates, `H:i:s` for only time and `Y-m-d H:i:s` for both combined. This helps to avoid issues in regard to different timezones between the server and the user's computer. The former `format` option has been deprecated.


## Step it up

The `step` option gained more attention. So far, it only was available in the time field and defined the number of minuted to which the value should be rounded to (e.g. having 5-minutes steps: 10:00, 10:05, 10:10 ...).

Now the step option can also be applied to the date field and its units:

```yaml
step:
  unit: day
  size: 2

# only unit, size will default to `1`
step: month

# only size, unit will default to `day`
step: 2
```

In the date field, this allows you, e.g. to define a field that only sets month and year:

```yaml
myMonth:
  type: date
  display: MMM YYYY
  step: month
```

<info>
It's important to keep in mind that a full date is still stored in the content file, e.g. `2020-05-01` in this case. You need to adapt your frontend output as well to only show month and year, e.g. `$page->myMonth()->toDate('F Y')`.
</info>

## What's about time?

So all this also applies to the time field:

```yaml
myTime:
  type: time
  display: hh.mm.ss a
  step:
    unit: Second
    size: 15
```

And of course you can also have your date and time field again:

```yaml
myDateTime:
  type: date
  display: DD.MM.YYYY HH:mm
  time: true
```

## What else

- **Keyboard magic**
But there was some advantage of select inputs over a common text input: manipulating the field via the arrow keys, tab along from day to month and year... So we brought that to the new field as well.
- **Better calendar**
The dropdown calendar got a lot of under-the-hood improvements. One more visible is that it properly supports now the `min` and `max` options