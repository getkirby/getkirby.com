Title: How to upgrade Kirby 2 plugins

----

Description: Learn how to adapt your Kirby 2 plugins to our new plugin system

----

Text:

## A new way to define plugins

The biggest change for plugins is a new way how to define plugins. All plugins are now defined by the `Kirby::plugin()` method. `$kirbyâ†’set()` is deprecated and no longer works.

The biggest advantage of this new definition syntax is a more consistent way of defining multiple plugin types and also composer compatibility.

```php
Kirby::plugin('superwoman/superplugin', [
	'tags'         => [ ... ],
	'fields'       => [ ... ]
	'fieldMethods' => [ ... ]
	// etc.
]);
```

In Kirby 3 this happens in `/site/plugins/MY-PLUGIN/index.php` where you define your plugin parts via `Kirby::plugin()` as well as add any helper functions or similar that your plugin requires.

Please check out the plugin docs for more information on the plugin definition and each plugin type:

## Plugin types that are almost compatible

These plugin types just need to be converted to the new wrapper syntax:

- (link: docs/reference/plugins/extensions/field-methods text: Field Methods)
- (link: docs/reference/plugins/extensions/hooks text: Hooks)
- (link: docs/reference/plugins/extensions/kirbytags text: KirbyTags)
- (link: docs/reference/plugins/extensions/page-models text: Page Models)

## Plugin types that are no longer compatible

These plugin types have no chance of being converted without rewriting them from scratch.

- (link: docs/reference/plugins/extensions/core-components  text: Components)
- (link: docs/reference/plugins/extensions/fields text: Fields)
